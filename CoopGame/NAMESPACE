# Generated by roxygen2: do not edit by hand

export(Allocation)
export(BitMatrix)
export(Coalition)
export(GameVector)
export(LPRows)
export(NumberOfPlayers)
export(absolutePublicGoodValue)
export(absolutePublicHelpChiValue)
export(absolutePublicHelpValue)
export(banzhafValue)
export(baruaChakravartySarkarIndex)
export(belongsToCore)
export(belongsToCoreCover)
export(belongsToImputationset)
export(belongsToReasonableSet)
export(belongsToWeberset)
export(cFuncApex)
export(cFuncApexValue)
export(cFuncApexVector)
export(cFuncBankruptcy)
export(cFuncBankruptcyValue)
export(cFuncBankruptcyVector)
export(cFuncCardinality)
export(cFuncCardinalityValue)
export(cFuncCardinalityVector)
export(cFuncCostSharing)
export(cFuncCostSharingValue)
export(cFuncCostSharingVector)
export(cFuncDictator)
export(cFuncDictatorValue)
export(cFuncDictatorVector)
export(cFuncDivideTheDollar)
export(cFuncDivideTheDollarValue)
export(cFuncDivideTheDollarVector)
export(cFuncGlove)
export(cFuncGloveValue)
export(cFuncGloveVector)
export(cFuncMajoritySingleVeto)
export(cFuncMajoritySingleVetoValue)
export(cFuncMajoritySingleVetoVector)
export(cFuncQuota)
export(cFuncQuotaValue)
export(cFuncQuotaVector)
export(cFuncUnanimity)
export(cFuncUnanimityValue)
export(cFuncUnanimityVector)
export(centroidCore)
export(centroidCoreCover)
export(centroidImputationSet)
export(centroidReasonableSet)
export(centroidWeberSet)
export(colemanInitiativePowerIndex)
export(colemanPreventivePowerIndex)
export(coreCoverVertices)
export(coreVertices)
export(createBitMatrix)
export(deeganPackelIndex)
export(disruptionNucleolus)
export(drawCentroidCore)
export(drawCentroidCoreCover)
export(drawCentroidImputationSet)
export(drawCentroidReasonableSet)
export(drawCentroidWeberSet)
export(drawCore)
export(drawCoreCover)
export(drawDisruptionNucleolus)
export(drawGatelyValue)
export(drawImputationset)
export(drawJohnstonIndex)
export(drawModiclus)
export(drawNormalizedBanzhafIndex)
export(drawNucleolus)
export(drawNucleolus2)
export(drawPerCapitaNucleolus)
export(drawPrenucleolus)
export(drawProportionalNucleolus)
export(drawPublicGoodIndex)
export(drawPublicGoodValue)
export(drawPublicHelpChiIndex)
export(drawPublicHelpChiValue)
export(drawPublicHelpIndex)
export(drawPublicHelpValue)
export(drawReasonableSet)
export(drawShapleyValue)
export(drawSimplifiedModiclus)
export(drawTauValue)
export(drawWeberset)
export(equalPropensityToDisrupt)
export(gatelyValue)
export(generateGameVector)
export(getCriticalCoalitionsOfPlayer)
export(getDualGameVector)
export(getEmptyParamCheckResult)
export(getExcessCoefficients)
export(getGapFunctionCoefficients)
export(getMarginalContributions)
export(getMinimalRights)
export(getMinimumWinningCoalitions)
export(getNondefiniteGameVector4GatelyValue)
export(getNumberOfPlayers)
export(getPerCapitaExcessCoefficients)
export(getPlayersFromBMRow)
export(getPlayersFromBitVector)
export(getPlayersFromIndex)
export(getRealGainingCoalitions)
export(getUnanimityCoefficients)
export(getUtopiaPayoff)
export(getVectorOfPropensitiesToDisrupt)
export(getZeroNormalizedGameVector)
export(getZeroOneNormalizedGameVector)
export(getkCover)
export(imputationsetVertices)
export(indexCoalition)
export(indexCoalitionByBitVector)
export(is1ConvexGame)
export(isAdditiveGame)
export(isBalancedGame)
export(isConstantSumGame)
export(isConvexGame)
export(isDegenerateGame)
export(isElementOfConvexSet)
export(isEssentialGame)
export(isImputation)
export(isMonotonicGame)
export(isNonnegativeGame)
export(isQuasiBalancedGame)
export(isSemiConvexGame)
export(isSimpleGame)
export(isSuperadditiveGame)
export(isSymmetricGame)
export(isWeaklyConstantSumGame)
export(isWeaklySuperadditiveGame)
export(johnstonIndex)
export(koenigBraeuningerIndex)
export(modiclus)
export(nevisonIndex)
export(nonNormalizedBanzhafIndex)
export(normalizedBanzhafIndex)
export(nucleolus)
export(nucleolus2)
export(perCapitaNucleolus)
export(prenucleolus)
export(propensityToDisrupt)
export(proportionalNucleolus)
export(publicGoodIndex)
export(publicGoodValue)
export(publicHelpChiIndex)
export(publicHelpChiValue)
export(publicHelpIndex)
export(publicHelpValue)
export(raeIndex)
export(rawBanzhafIndex)
export(rawBanzhafValue)
export(reasonableSetVertices)
export(shapleyShubikIndex)
export(shapleyValue)
export(simplifiedModiclus)
export(stopOnInvalidAllocation)
export(stopOnInvalidBoolean)
export(stopOnInvalidClaimsVector)
export(stopOnInvalidCoalitionFunctionV)
export(stopOnInvalidCoalitionS)
export(stopOnInvalidDictator)
export(stopOnInvalidEstate)
export(stopOnInvalidGameVectorA)
export(stopOnInvalidGrandCoalitionN)
export(stopOnInvalidIndex)
export(stopOnInvalidLeftRightCFuncGlove)
export(stopOnInvalidNChooseB)
export(stopOnInvalidNumber)
export(stopOnInvalidNumberOfPlayers)
export(stopOnInvalidParameterDummy_CoopGame)
export(stopOnInvalidQuota)
export(stopOnInvalidVetoPlayer)
export(stopOnInvalidWeightVector)
export(stopOnParamCheckError)
export(tauValue)
export(visualize)
export(webersetVertices)
exportClasses(Allocation)
exportClasses(AllocationProperty)
exportClasses(BitMatrix)
exportClasses(Coalition)
exportClasses(CoopGameBase)
exportClasses(CoopGameCFunc)
exportClasses(CoopGameProperty)
exportClasses(CoopGameSolution)
exportClasses(GameProperty)
exportClasses(GameVector)
exportClasses(LPBndsObjCoefs)
exportClasses(LPCoopGameUtils)
exportClasses(LPMatrix)
exportClasses(LPRows)
exportClasses(NucleolusBase)
exportClasses(NumberOfPlayers)
exportClasses(PayoffSpace)
exportClasses(PointSolutionConcept)
exportClasses(SetSolutionConcept)
exportClasses(cFuncApex)
exportClasses(cFuncBankruptcy)
exportClasses(cFuncCardinality)
exportClasses(cFuncCostSharing)
exportClasses(cFuncDictator)
exportClasses(cFuncDivideTheDollar)
exportClasses(cFuncGlove)
exportClasses(cFuncMajoritySingleVeto)
exportClasses(cFuncQuota)
exportClasses(cFuncUnanimity)
exportMethods("setA<-")
exportMethods("setClb<-")
exportMethods("setCtype<-")
exportMethods("setCub<-")
exportMethods("setLPBndsObjCoefs<-")
exportMethods("setLPCoopGameUtils<-")
exportMethods("setLPMatrix<-")
exportMethods("setLPRows<-")
exportMethods("setMatrix<-")
exportMethods("setMatrixLastCol<-")
exportMethods("setObj<-")
exportMethods("setRlb<-")
exportMethods("setRtype<-")
exportMethods("setRub<-")
exportMethods(calculateNucleolus)
exportMethods(calculatePointSolution)
exportMethods(calculatePowerIndex)
exportMethods(calculateSetSolution)
exportMethods(calculateSolution)
exportMethods(changeLPCoopGameUtilsObjDirToMax)
exportMethods(changeLPCoopGameUtilsObjDirToMin)
exportMethods(checkAbort)
exportMethods(checkGamePreconditions)
exportMethods(determineExcessCoefficients)
exportMethods(determineProperty)
exportMethods(getA)
exportMethods(getClb)
exportMethods(getCoalitionValue)
exportMethods(getCtype)
exportMethods(getCub)
exportMethods(getLPBndsObjCoefs)
exportMethods(getLPCoopGameUtils)
exportMethods(getLPDualSolution)
exportMethods(getLPDualSolutionPos)
exportMethods(getLPMatrix)
exportMethods(getLPObjDir)
exportMethods(getLPObjVal)
exportMethods(getLPPrimalSolution)
exportMethods(getLPRows)
exportMethods(getLPRowsBoundsFunc)
exportMethods(getMatrix)
exportMethods(getMatrixLastCol)
exportMethods(getNumberOfCols)
exportMethods(getObj)
exportMethods(getPrimStat)
exportMethods(getRlb)
exportMethods(getRtype)
exportMethods(getRub)
exportMethods(getSetSolutionVertices)
exportMethods(initLPBndsObjCoefs)
exportMethods(initLPMatrix)
exportMethods(initLPRows)
exportMethods(isElementOfPayoffSpace)
exportMethods(isLPFeasible)
exportMethods(solveLP)
exportMethods(updateLPBndsObjCoefs)
exportMethods(updateLPCoopGameUtils)
exportMethods(updateLPMatrix)
exportMethods(updateLPRows)
exportMethods(updateNucleolusBase)
import(geometry)
import(glpkAPI)
import(rcdd)
import(rgl)
importFrom(grDevices,chull)
importFrom(graphics,plot)
importFrom(graphics,plot.new)
importFrom(graphics,polygon)
importFrom(graphics,text)
importFrom(gtools,permutations)
importFrom(hier.part,combos)
importFrom(utils,combn)
