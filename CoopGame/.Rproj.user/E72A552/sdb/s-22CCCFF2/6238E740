{
    "collab_server" : "",
    "contents" : "#' @name publicHelpIndex\n#' @title publicHelpIndex\n#' @description Calculates the Public Help Index for a specified simple TU game.\n#' @aliases publicHelpIndex, publicHelpThetaIndex\n#' @export publicHelpIndex\n#' @template author/JA\n#' @template author/JS\n#' @template cites/BERTINI_ET_AL_2008\n#' @templateVar BERTINI_ET_AL_2008_P pp. 83 -- 98\n#' @inheritParams CoopGameBaseParams\n#' @return Public Help Index for specified simple game \n#' @examples \n#' A=c(0,0,0,1,1,0,1)\n#' publicHelpIndex(A) #result: 0.4285714 0.2857143 0.2857143\npublicHelpIndex<-function(A){\n  phi=PublicHelpConcept(A)\n  return(calculatePowerIndex(phi))\n}\n\n\n\nlogicPublicHelpIndex=function(A){\n  if(!isSimpleGame(A)){\n    print(\"Game is not simple. Therefore no Public Help Index can be retrieved\")\n  }\n  else\n  {\n    n=getNumberOfPlayers(A)\n    bm=createBitMatrix(n,A)\n    #the winning coalitions\n    wcs=bm[bm[,\"cVal\"]>0,,drop=FALSE]\n    #the values of corresponding where \n    temp=sapply(c(1:n),function(i){sum(wcs[wcs[,i]==1,\"cVal\"])})\n    sumPlayerValues=sum(temp)\n    phi=sapply(c(1:n),function(i){temp[i]/sumPlayerValues})\n    return(PHI=phi)\n  }\n}\n\n#' @title PublicHelpConcept\n#' @noRd\n#' @description PublicHelpConcept\n#' @include PointSolutionConcept.R\n# @exportClass PublicHelpConcept\n\nsetClass(\n  \"PublicHelpConcept\",\n  contains = \"PointSolutionConcept\"\n)\n\n#' @rdname calculatePowerIndex-methods\n#' @aliases calculatePowerIndex,PublicHelpConcept-method\nsetMethod(\n  \"calculatePowerIndex\",\n  signature=\"PublicHelpConcept\",\n  definition=function(.Object){\n    A<-.Object@A\n    return(logicPublicHelpIndex(A))\n  }\n)\n\n#' @title Constructor for PublicHelpConcept\n#' @noRd\n#' @template author/JA\n#' @template author/JS\n#' @name PublicHelpConcept\n#' #@export\nPublicHelpConcept<-function(A){\n  retPublicHelpIndex=methods::new(\"PublicHelpConcept\",A)\n  return(retPublicHelpIndex)\n}\n\n\n\n#' @name drawPublicHelpIndex\n#' @title drawPublicHelpIndex for 3 or 4 players\n#' @description drawPublicHelpIndex draws the Public Help Index for 3 or 4 players.\n#' @aliases drawPublicHelpIndex\n#' @export drawPublicHelpIndex\n#' @template author/JA\n#' @template author/JS\n#' @template cites/BERTINI_ET_AL_2008\n#' @templateVar BERTINI_ET_AL_2008_P pp. 83 -- 98\n#' @inheritParams CoopGameBaseParams\n#' @inheritParams visualize\n#' @return Draws Public Help index for given game vector with 3 or 4 players\n#' @examples\n#' A=c(0,0,0,1,1,0,1)\n#' drawPublicHelpIndex(A) \ndrawPublicHelpIndex<-function(A,holdOn=FALSE, colour = NA , label=TRUE, name = \"Public Help Index\"){\n  A=GameVector(A)\n  sm=publicHelpIndex(A);\n  visualize(A, pointsToDraw=sm, holdOn=holdOn, colour = colour , label=label, name = name)\n}\n",
    "created" : 1525209042314.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2262163163",
    "id" : "6238E740",
    "lastKnownWriteTime" : 1534235461,
    "last_content_update" : 1534235461516,
    "path" : "C:/Users/Johannes/Dropbox/UNIVERSITAET/Master_Inf/MASTER_ARBEIT/SVN_REPO/CoopGame/R/PublicHelpConcept.R",
    "project_path" : "R/PublicHelpConcept.R",
    "properties" : {
    },
    "relative_order" : 10,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}