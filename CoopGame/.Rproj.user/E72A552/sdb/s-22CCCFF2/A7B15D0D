{
    "collab_server" : "",
    "contents" : "#' @name centroidWeberSet\n#' @title centroidWeberSet\n#' @description Calculates the centroid of the Weber set for specified game.\n#' @aliases centroidWeberSet\n#' @export centroidWeberSet\n#' @template author/JS\n#' @template cites/WEBER_1988\n#' @templateVar WEBER_1988_P pp. 101--119\n#' @template cites/PETERS_2015\n#' @templateVar PETERS_2015_P p. 327 ff.\n#' @inheritParams CoopGameBaseParams\n#' @return Calculates the centroid of the Weber set for a game specified by a game vector A.\n#' @examples\n#' #Example for centroid of the Weber set\n#' A=c(0,0,0,2,2,3,5)\n#' centroidWeberSet(A) \n#' #[1] 1.333333 2.666667 2.666667\n#' \ncentroidWeberSet<-function(A){\n  tv=CentroidWeberSetConcept(A)\n  return(calculatePointSolution(tv))\n}\n\nlogicCentroidWeberSet<-function(A){\n  retVal=NULL\n  n=getNumberOfPlayers(A)\n  N=length(A)\n  setVertices=webersetVertices(A)\n  \n  if(!isEssentialGame(A) || (nrow(setVertices) == 0) ){\n    print(\"Weber set is empty and so no centroid of the Weber set can be retrieved\")\n  }else{\n    setVertices=webersetVertices(A)\n    centroid=colSums(setVertices)/nrow(setVertices)\n    retVal = centroid\n  }\n  return(retVal)\n}\n\n\n#' @title CentroidWeberSetConcept - S4 class for centroid weber set concept\n#' @name CentroidWeberSetConceptClass\n#' @noRd\n#' @description S4 class containing logic for solving centroid weber set concept\n#' @include PointSolutionConcept.R\n#' #@exportClass CentroidWeberSetConcept\n\nsetClass(\n  \"CentroidWeberSetConcept\",\n  contains = \"PointSolutionConcept\"\n)\n\n#' @title Constructor for CentroidWeberSetConcept\n#' @noRd\n#' @template author/JS\n#' @name CentroidWeberSetConcept\n#' @inheritParams CoopGameBaseParams\n#'# @export\nCentroidWeberSetConcept<-function(A){\n  retCentroidWeberSetConcept=methods::new(\"CentroidWeberSetConcept\",A)\n  return(retCentroidWeberSetConcept)\n}\n#' @rdname calculatePointSolution-methods\n#' @aliases calculatePointSolution,CentroidWeberSetConcept-method\nsetMethod(\n  \"calculatePointSolution\",\n  signature=\"CentroidWeberSetConcept\",\n  definition=function(.Object){\n    A<-.Object@A\n    return(logicCentroidWeberSet(A))\n  }\n)\n\n#' @name drawCentroidWeberSet\n#' @title drawCentroidWeberSet for 3 or 4 players\n#' @family CentroidWeberSetConcept\n#' @family PointSolutionConcept\n#' @description drawCentroidWeberSet draws the centroid of the weber set for 3 or 4 players.\n#' @aliases drawCentroidWeberSet\n#' @export drawCentroidWeberSet\n#' @template author/JS\n#' @template cites/WEBER_1988\n#' @templateVar WEBER_1988_P pp. 101--119\n#' @template cites/PETERS_2015\n#' @templateVar PETERS_2015_P p. 327 ff.\n#' @inheritParams CoopGameBaseParams\n#' @inheritParams visualize\n#' @examples\n#' A=c(0,0,5,4,8,9,12)\n#' drawCentroidWeberSet(A,colour=\"green\")\ndrawCentroidWeberSet<-function(A,holdOn=FALSE, colour = NA , label=TRUE, name = \"centroid of Weber set\"){\n  A=GameVector(A)\n  pcn=centroidWeberSet(A);\n  visualize(A, pointsToDraw=pcn, holdOn=holdOn, colour = colour , label=label, name = name)\n}\n",
    "created" : 1534321934962.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3135815804",
    "id" : "A7B15D0D",
    "lastKnownWriteTime" : 1534321963,
    "last_content_update" : 1534321963889,
    "path" : "C:/Users/Johannes/Dropbox/UNIVERSITAET/Master_Inf/MASTER_ARBEIT/SVN_REPO/CoopGame/R/CentroidWeberSetConcept.R",
    "project_path" : "R/CentroidWeberSetConcept.R",
    "properties" : {
    },
    "relative_order" : 72,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}