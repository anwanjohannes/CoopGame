{
    "collab_server" : "",
    "contents" : "#Date: 20170111\n#' MaintenananceSysdata\n#' @name MaintenananceSysdata\n#' @description Functions to maintain sysdata.rda file of specified package\n#' @author Johannes Anwander\n#' @section Maintenance Functions:\n#' \\tabular{lll}{\n#' \\strong{Function Name}                   \\tab  \\strong{Short Description} \\cr\n#' \\code{\\link{exportEmptyErrFile}}         \\tab Creates and exports new empty csv file with column names according to fields to be maintained for error codes \\cr\n#' \\code{\\link{exportErrSysdata}}           \\tab Creates and exports 'sysdata.rda' file containing the error codes and error messages as well as other objects. \\cr\n#' \\code{\\link{exportPackageSysdata}}       \\tab Creates 'sysdata.rda' file containing any objects for package \\cr\n#' \\code{\\link{importErrDataFrame}}         \\tab Imports errorcodes and corresponding attributes out of specified csv file \\cr\n#' \\code{\\link{maintainCSVDataWithFix}}     \\tab Maintains any csv file with editor supplied by function fix \\cr\n#' }\nNULL\n\n#Date: 20170111\n#File description of MaintenanceSysdata.R:\n# - FIRST SECTION of MaintenanceSysdata.R contains maintenance functions\n# - SECOND SECTION of MaintenanceSysdata.R contains helper functions\n\n\n#FIRST SECTION START - maintenance functions\n\n#CONSTANTS\n#Default csv seperator\nCSV_SEPERATOR=\";\"\n#default errorcode file name\nCSV_ERRFILE=\"errorcodes.csv\"\n\n#  Version 1.0\n#  Date: 20161219\n#' @name exportErrSysdata\n#' @family MaintenananceSysdata\n#' @title exportErrSysdata\n#' @description exportErrSysdata creates 'sysdata.rda' file containing the error codes and error messages within the referenced package in the 'R' folder.\n#' @aliases exportErrSysdata\n#' @export exportErrSysdata\n#' @author Johannes Anwander\n#' @param csvErrFile represents the csv file containing the error codes and error messages\n#' @param packagePath represents path to package 'sysdata.rda' gets written to.\n#' @param boolExtdata is boolean variable, when         'TRUE':  param csvErrFile is path of csv file for importing error codes and messages\n#'                                         when default 'FALSE': param csvErrFile is name under which file is available in extdata directory of package\n#' @section Exported Functions:\n#' Functions to be exported on default when calling function exportErrSysdata.\n#' \\tabular{lll}{\n#' \\strong{Function Name}                   \\tab  \\strong{Short Description} \\cr\n#' \\code{\\link{getSysdataErrorEntry}}       \\tab Returns entry for specified error code in errorcodes data.frame (list element of SYSDATA_OBJECTS) within sysdata  \\cr\n#' \\code{\\link{getSysdataObject}}           \\tab Returns list object of SYSDATA_OBJECTS with specified object name. \\cr\n#' }\n#' @examples\n#' #Creating 'sysdata.rda' file with error codes and messages\n#' for package 'CoopGame' (analogue for 'CommunicationGames')\n#'\n#' #USECASE 1 (recommended usage) - Working directory is set\n#' #to folder of package 'CoopGame' (under development) and error codes\n#' # and messages are stored in a CSV file within the same package in the folder 'inst/extdata/'\n#'\n#' setwd(\"CoopGame\");\n#'\n#' #CoopGame  <-Working Directory\n#' #├── inst\n#' #│   └── extdata\n#' #│       └── errorcodes.csv <-File referenced by csvErrFile\n#' #├── man\n#' #├── man-roxygen\n#' #├── R\n#' #└── tests\n#'\n#'exportErrSysdata(csvErrFile=\"errorcodes.csv\")\n#'\n#'#or also, cause default value of csvErrFile:\n#'exportErrSysdata()\n#'\n#' #USECASE 2 - Working directory is not set to folder of package 'CoopGame' (under development) and CSV file with error codes and error message is external\n#'\n#' setwd(\"SVN_REPO\")\n#'\n#' #SVN_REPO  <-Working directory\n#' #├── CommunicationGames\n#' #├── CoopGame\n#' #└── errcodes.csv\n#'\n#' exportErrSysdata(csvErrFile=\"./errorcodes.csv\", packagePath=\"./CoopGame\", boolExtdata=FALSE)\n#'#or also, cause default value of csvErrFile:\n#' exportErrSysdata(packagePath=\"./CoopGame\", boolExtdata=FALSE)\n\n\nexportErrSysdata<-function(csvErrFile=CSV_ERRFILE,packagePath=\".\",boolExtdata=TRUE,...){\n  # csvErrFilePath<-getCSVFilePath(packagePath = packagePath, fileName = csvErrFile, boolExtdata);\n  errorcodes<-importErrDataFrame(packagePath=packagePath, csvErrFile = csvErrFile, boolExtdata=boolExtdata);\n  exportPackageSysdata(packagePath=packagePath,errorcodes=errorcodes,getSysdataErrorEntry=getSysdataErrorEntry,getSysdataObject=getSysdataObject,fillParamCheckResult=fillParamCheckResult,...)\n}\n\n#  Version 1.0\n#  Date: 20161217\n#' @name exportPackageSysdata\n#' @title exportPackageSysdata\n#' @family MaintenananceSysdata\n#' @description exportPackageSysdata creates 'sysdata.rda' file containing any objects for package\n#' After creating file 'sysdata.rda' gets exported.\n#' @aliases exportPackageSysdata\n#' @export exportPackageSysdata\n#' @import devtools\n#' @author Johannes Anwander\n#' @param packagePath represents path to package\n#' @param ... represents objects which get exported to 'sysdata.R'\n#' @examples\n#'\n#' #USECASE 1: Simple export of different objects to package when working directory is not set to package\n#' setwd(\"CoopGame\");\n#'\n#' #CoopGame  <-Working Directory\n#' #├── inst\n#' #├── man\n#' #├── man-roxygen\n#' #├── R\n#' #└── tests\n#'\n#'\n#' a=5;\n#' b=c;\n#' funcDummy<-function(){print(\"HelloWorld!\")}\n#' createErrSysdataCoopGame(a,b,funcDummy)\n#'\n#' #USECASE 2: Simple export of different objects to package when working directory is not set to package\n#'\n#' setwd(\"SVN_REPO\");\n#'\n#' #SVN_REPO  <-Working directory\n#' #├── CommunicationGames\n#' #├── CoopGame\n#' #└── errcodes.csv\n#'\n#'\n#' a=5;\n#' b=c;\n#' funcDummy<-function(){print(\"HelloWorld!\")}\n#' errorcodes=createErrSysdataCoopGame(a,b,funcDummy, packagePath=\"./CoopGame\");\n#' exportPackageSysdata(a,b,funcDummy,errorcodes,packagePath=\"./CoopGame\");\n\nexportPackageSysdata<-function( packagePath=\".\", ...){\n  #backup path to old backup directory\n  oldWDDir <- getwd();\n  setwd(packagePath);\n\n  pkgName<-basename(getwd())\n  SYSDATA_OBJECTS<-list(...);\n  #set path to package path\n\n\n  SYSDATA_OBJECTS<-sapply(SYSDATA_OBJECTS,function(obj,ns){obj2=obj; environment(obj2)<-asNamespace(ns); eval.parent(substitute(obj<-obj2));},ns=pkgName)\n\n  #Export sysdata.R with errcodes to corresponding package - condition: pathCoopGame needs to be set correctly\n  devtools::use_data(pkg = packagePath,overwrite = TRUE,internal = TRUE,...=SYSDATA_OBJECTS );\n  #set old working directory\n  setwd(oldWDDir);\n}\n\n#  Version 1.0\n#  Date: 20161217\n#' @name importErrDataFrame\n#' @title importErrDataFrame\n#' @family MaintenananceSysdata\n#' @description importErrDataFrame imports errorcodes and corresponding attributes out of specified csv file.\n#' After creating file 'sysdata.rda' gets exported to 'CoopGame/R.\n#' @aliases importErrDataFrame\n#' @export importErrDataFrame\n#' @import devtools\n#' @author Johannes Anwander\n#' @param pathCoopGame represents path to package CoopGame\n#' @param fileErrCodes is name of file containing the error codes of package CoopGame.\n#' @param sep represents character seperating CSV columns (on default ';')\n#' @examples\n#'\n#' #USECASE 1: Simple import of error codes and messages out of csv file\n#' setwd(\"CoopGame\");\n#'\n#' #CoopGame  <-Working Directory\n#' #├── inst\n#' #|    └── extdata\n#' #|        └── errorcodes.csv  <- csv file with errorcodes referenced by param fileErrCodes\n#' #├── man\n#' #├── man-roxygen\n#' #├── R\n#' #└── tests\n#'\n#'csvErrFile=\"errorcodes.csv\"\n#'\n#'#or also, cause default value of csvErrFile:\n#'importErrDataFrame()\n#'\n#'\n#' #USECASE 2: Simple import of different objects when csv file is not within package\n#'\n#' setwd(\"SVN_REPO\");\n#'\n#' #SVN_REPO  <-Working directory\n#' #├── CommunicationGames\n#' #├── CoopGame\n#' #└── errorcodes.csv <- csv file with errorcodes referenced by param fileErrCodes\n#'\n#'importErrDataFrame(csvErrFile=\"errorcodes.csv\",packagePath=\"./CoopGame\",boolExtdata=FALSE)\n#'\n#'#or also, cause default value of csvErrFile:\n#'importErrDataFrame(packagePath=\"./CoopGame\",boolExtdata=FALSE)\n\n\n\nimportErrDataFrame<-function(csvErrFile=CSV_ERRFILE,packagePath=\".\",boolExtdata=TRUE){\n  csvErrFilePath <- getCSVFilePath(packagePath = packagePath, fileName = csvErrFile, boolExtdata);\n  errorcodes=readCSV(file=csvErrFilePath);\n  return(errorcodes);\n}\n\n#  Version 1.0\n#  Date: 20161217\n#' @name maintainCSVDataWithFix\n#' @title maintainCSVDataWithFix\n#' @family MaintenananceSysdata\n#' @description maintainCSVDataWithFix maintains any csv file with editor supplied by function fix\n#' @aliases maintainCSVDataWithFix\n#' @export maintainCSVDataWithFix\n#' @author Johannes Anwander\n#' @param fileName represents path to csv file\n#' @param  newFile is on default  FALSE: Original csv file gets overwritten with maintained version if there are changes.\n#'                              if TRUE: User is asked on prompt for new file name to save\n#'                         if character: File gets saved with name supplied by user\n#' @examples\n#'\n#' #USECASE 1: Maintanance of errorcodes and messages out of csv file within package\n#' setwd(\"CoopGame\");\n#'\n#' #CoopGame  <-Working Directory\n#' #└── inst\n#' #|    └── extdata\n#' #|        └── errorcodes.csv  <- csv file with errorcodes referenced by param fileErrCodes\n#' #├── man\n#' #├── man-roxygen\n#' #├── R\n#' #└── tests\n#'\n#'maintainCSVDataWithFix(fileCSV=\"errorcodes.csv\");\n#'\n#'#or also, cause default value of csvErrFile:\n#'maintainCSVDataWithFix();\n#'\n#'\n#' #USECASE 2: Simple import of different objects when csv file is not within package\n#'\n#' setwd(\"SVN_REPO\");\n#'\n#' #SVN_REPO  <-Working directory\n#' #├── CommunicationGames\n#' #├── CoopGame\n#' #└── errorcodes.csv <- csv file with errorcodes referenced by param fileErrCodes\n#'\n#' maintainCSVDataWithFix<-function(fileCSV=\"errorcodes.csv\",packagePath=\"./CoopGame\",boolExtdata=FALSE)\n\nmaintainCSVDataWithFix<-function(fileCSV=CSV_ERRFILE,packagePath=\".\",newFile=FALSE, sep=CSV_SEPERATOR, boolExtdata=TRUE){\n  #Path either <fileCSV> when boolExtdate false else path is <packagePath>/inst/extdata/<fileCSV>\n  filePath<-getCSVFilePath(packagePath = packagePath, fileName = fileCSV, boolExtdata);\n  errcodes<-readCSV(filePath);\n  errcodes[is.na(errcodes)]<-\"\";\n  errcodesTmp<-fix(errcodes);\n  #Path for output when <boolExdata> false either <CSV_ERRFILE> or <newFile> (is.character)\n  #                when <boolExdata> true either <packagePath>/inst/extdata/<fileCSV> or <packagePath>/inst/extdata/<newFile>\n  outputFileName<-fileCSV;\n  if(is.character(newFile)){\n    outputFileName <-newFile;\n  }else if(newFile==TRUE){\n    tmpNewFileName<- readline(prompt=\"Please enter file name to save (Hit enter for original)\")\n    if(tmpNewFileName!=\"\"){\n      outputFileName=tmpNewFileName;\n    }\n  }\n  outputFilePath<-getCSVFilePath(packagePath = packagePath, fileName=outputFileName, boolExtdata);\n\n  if(!identical(errcodes,errcodesTmp)){\n    writeCSV(errcodesTmp,file = outputFilePath,sep = sep)\n  }else{\n    print(\"No changes\")\n  }\n}\n\n\n#  Version 1.0\n#  Date: 20161217\n#' @name exportEmptyErrFile\n#' @title exportEmptyErrFile\n#' @family MaintenananceSysdata\n#' @description exportEmptyErrFile creates new empty csv file with column names according to fields to be maintained for error codes\n#' @aliases exportEmptyErrFile\n#' @export exportEmptyErrFile\n#' @author Johannes Anwander\n#' @param file represents: in case boolExtdata is set   'FALSE': Path under which newly created csv file gets stored\n#'                                                      'TRUE':  Name file gets stored in extdata directory of package\n#' @param boolExtdata is boolean variable, when         'TRUE':  CSV file gets created in extdata directory of package\n#'                                         when default 'FALSE': CSV file get created according to referenced path by param 'csvErrFile'\n#' @param errCodesStart  First number where error code range should start\n#' @param errCodesEnd    Last number where error code range should end\n#' @examples\n#'\n#' #USECASE 1: C csv file within package\n#' setwd(\"CoopGame\");\n#'\n#' #CoopGame  <-Working Directory\n#' #└── inst\n#' #|    └── extdata\n#' #|        └── errorcodes.csv  <- csv file with errorcodes referenced by param fileErrCodes which will be created\n#' #├── man\n#' #├── man-roxygen\n#' #├── R\n#' #└── tests\n#'\n#'exportEmptyErrFile(fileCSV=\"errorcodes.csv\");\n#'\n#'#or also, cause default value of csvErrFile:\n#'exportEmptyErrFile();\n#'\n#'\n#' #USECASE 2: Simple import of different objects when csv file is not within package\n#'\n#' setwd(\"SVN_REPO\");\n#'\n#' #SVN_REPO  <-Working directory\n#' #├── CommunicationGames\n#' #├── CoopGame\n#' #└── errorcodes.csv <- csv file with errorcodes referenced by param fileErrCodes\n#'\n#'exportEmptyErrFile(fileCSV=\"./errorcodes.csv\",packagePath=\"./CoopGame\",boolExtdata=FALSE);\n#'\n#'#or also, cause default value of csvErrFile:\n#'exportEmptyErrFile(packagePath=\"./CoopGame\",boolExtdata=FALSE);\n\nexportEmptyErrFile<-function(csvErrFile=CSV_ERRFILE,packagePath=\".\",errCodesStart=numeric(),errCodesEnd=numeric(),boolExtdata=TRUE){\n  filePath=getCSVFilePath(packagePath = packagePath, fileName = csvErrFile, boolExtdata);\n  errDataFrame=getEmptyErrDataFrame(errCodesStart,errCodesEnd);\n  writeCSV(errDataFrame,filePath);\n}\n\n#FIRST SECTION END - maintenance functions\n\n#SECOND SECTION START - helper functions functions\n#Helper functions: Reads csv file\nreadCSV<-function(file,sep=CSV_SEPERATOR){\n  tmpFrame<-read.csv(file,sep=sep)\n  #First column represents ID (numeric)\n  tmpFrame[,1]<-sapply(tmpFrame[,1],as.numeric)\n  tmpFrame[,2:length(tmpFrame)]<-sapply(tmpFrame[,2:length(tmpFrame)],as.character)\n  return(tmpFrame);\n}\n\n#Helper functions: writes to csv file\nwriteCSV<-function(object,file,sep=CSV_SEPERATOR){\n  # write.csv(object,file = file, row.names=FALSE, sep = \";\")\n  write.table(object, file=file, append=FALSE, quote=FALSE, sep=sep,row.names=FALSE)\n}\n\n#Helper functions: Returns path of csv file in dependency of boolExtdata.\n#If boolExtdata is TRUE:  The csv file is within the directory inst/extdata of the specified package (ref. by packagePath)\n#                         with name specified by fileName\n#                  FALSE: The csv file path is only specified fileName\ngetCSVFilePath<-function(packagePath,fileName,boolExtdata){\n  if(boolExtdata){\n    filePath<-getExtdataFilePath(packagePath = packagePath,fileName = fileName);\n  }else{\n    filePath<-fileName;\n  }\n  return(filePath);\n}\n\n#Helper functions: Returns path of csv file within the directory inst/extdata of the specified package (ref. by packagePath)\ngetExtdataFilePath<-function(packagePath, fileName){\n  return(paste(packagePath,\"/\",\"inst/extdata/\",fileName,sep=\"\"))\n}\n\n#Helper functions: Returns empty data frame for errorcodes within specified number range (errCodeStart, and errCodeEnd)\ngetEmptyErrDataFrame<-function(errCodesStart,errCodesEnd){\n  numberOfEntries=errCodesEnd-errCodesStart+1;\n  errorCodes=c(errCodesStart:errCodesEnd);\n  characterCol=rep(\" \",numberOfEntries);\n  return(data.frame(errCode=errorCodes,errMessage=characterCol,description=characterCol,solution=characterCol,refFunction=characterCol));\n}\n\n#SECOND SECTION END - helper functions functions\n\n",
    "created" : 1534344765465.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "557290006",
    "id" : "D5E27110",
    "lastKnownWriteTime" : 1484946093,
    "last_content_update" : 1484946093,
    "path" : "C:/Users/Johannes/Dropbox/UNIVERSITAET/Master_Inf/MASTER_ARBEIT/SVN_REPO/AuxiliaryTools/R/MaintenanceSysdata.R",
    "project_path" : null,
    "properties" : {
        "source_window_id" : ""
    },
    "relative_order" : 89,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}