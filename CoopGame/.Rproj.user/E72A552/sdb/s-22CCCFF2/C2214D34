{
    "collab_server" : "",
    "contents" : "#' @name centroidImputationSet\n#' @title centroidImputationSet\n#' @description Calculates the centroid of the imputation set for specified game.\n#' @aliases centroidImputationSet\n#' @export centroidImputationSet\n#' @template author/JS\n#' @inheritParams CoopGameBaseParams\n#' @return It calculates the centroid of the imputation set for a game specified by a game vector A.\n#' @examples\n#' #Example for centroid of the imputation set\n#' A=c(0,0,0,2,2,3,5)\n#' centroidImputationSet(A) \n#' #[1] 1.666667 1.666667 1.666667\n#' \ncentroidImputationSet<-function(A){\n  tv=CentroidImputationSetConcept(A)\n  return(calculatePointSolution(tv))\n}\n\nlogicCentroidImputationSet<-function(A){\n  retVal=NULL\n  n=getNumberOfPlayers(A)\n  N=length(A)\n  \n  if(!isEssentialGame(A)){\n    print(\"Game is not essential therefore no centroid of the imputation set can be retrieved\")\n  }else{\n    setVertices=imputationsetVertices(A)\n    centroid=colSums(setVertices)/n\n    retVal = centroid\n  }\n  return(retVal)\n}\n\n\n#' @title CentroidImputationSetConcept - S4 class for centroid imputation set concept\n#' @name CentroidImputationSetConceptClass\n#' @noRd\n#' @description S4 class containing logic for solving centroid imputation set concept\n#' @include PointSolutionConcept.R\n#' #@exportClass CentroidImputationSetConcept\n\nsetClass(\n  \"CentroidImputationSetConcept\",\n  contains = \"PointSolutionConcept\"\n)\n\n#' @title Constructor for CentroidImputationSetConcept\n#' @noRd\n#' @template author/JS\n#' @name CentroidImputationSetConcept\n#' @inheritParams CoopGameBaseParams\n#'# @export\nCentroidImputationSetConcept<-function(A){\n  retCentroidImputationSetConcept=methods::new(\"CentroidImputationSetConcept\",A)\n  return(retCentroidImputationSetConcept)\n}\n#' @rdname calculatePointSolution-methods\n#' @aliases calculatePointSolution,CentroidImputationSetConcept-method\nsetMethod(\n  \"calculatePointSolution\",\n  signature=\"CentroidImputationSetConcept\",\n  definition=function(.Object){\n    A<-.Object@A\n    return(logicCentroidImputationSet(A))\n  }\n)\n\n#' @name drawCentroidImputationSet\n#' @title drawCentroidImputationSet for 3 or 4 players\n#' @family CentroidImputationSetConcept\n#' @family PointSolutionConcept\n#' @description drawCentroidImputationSet draws the centroid of the imputation set for 3 or 4 players.\n#' @aliases drawCentroidImputationSet\n#' @export drawCentroidImputationSet\n#' @template author/JS\n#' @inheritParams CoopGameBaseParams\n#' @inheritParams visualize\n#' @examples\n#' A=c(0,0,5,4,8,9,12)\n#' drawCentroidImputationSet(A,colour=\"green\")\ndrawCentroidImputationSet<-function(A,holdOn=FALSE, colour = NA , label=TRUE, name = \"centroid of imputation set\"){\n  A=GameVector(A)\n  pcn=centroidImputationSet(A);\n  visualize(A, pointsToDraw=pcn, holdOn=holdOn, colour = colour , label=label, name = name)\n}\n",
    "created" : 1534321885533.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4151116433",
    "id" : "C2214D34",
    "lastKnownWriteTime" : 1534321900,
    "last_content_update" : 1534321900985,
    "path" : "C:/Users/Johannes/Dropbox/UNIVERSITAET/Master_Inf/MASTER_ARBEIT/SVN_REPO/CoopGame/R/CentroidImputationSetConcept.R",
    "project_path" : "R/CentroidImputationSetConcept.R",
    "properties" : {
    },
    "relative_order" : 70,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}