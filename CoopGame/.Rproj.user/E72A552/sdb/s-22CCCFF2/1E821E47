{
    "collab_server" : "",
    "contents" : "#' @name cFuncDictatorValue\n#' @title cFuncDictatorValue\n#' @description \\strong{Coalition value for a dictator game:} \\cr\n#' For further information see \\link{cFuncDictator} \n#' @aliases cFuncDictatorValue\n#' @export cFuncDictatorValue\n#' @template author/JA\n#' @template cites/PETERS_2015\n#' @templateVar PETERS_2015_P p. 295\n#' @template param/S\n#' @template param/dictator\n#' @return \\code{1} if dictator is involved, \\code{0} otherwise.\n#' @examples \n#' library(CoopGame)\n#' cFuncDictatorValue(S=c(1,2,3),dictator=2)\n#' #Output:\n#' #[1] 1\ncFuncDictatorValue<-function(S,dictator){\n  paramCheckResult=getEmptyParamCheckResult()\n  stopOnInvalidCoalitionS(paramCheckResult,S)\n  stopOnInvalidDictator(paramCheckResult,dictator)\n  logicCFuncDictatorValue(S,dictator)\n}\n\n\nlogicCFuncDictatorValue=function(S,dictator){\n  retVal=logicCFuncUnanimityValue(S,T=dictator)\n  return (retVal)\n}\n\n#' @name cFuncDictatorVector\n#' @title cFuncDictatorVector\n#' @description \\strong{Coalition vector for an apex game:} \\cr\n#' For further information see \\link{cFuncApex} \n#' @aliases cFuncDictatorVector\n#' @export cFuncDictatorVector\n#' @template author/JA\n#' @template author/JS\n#' @template cites/PETERS_2015\n#' @templateVar PETERS_2015_P p. 295\n#' @template param/n\n#' @template param/dictator\n#' @return  Game Vector where each element contains \\code{1} if dictator is involved, \\code{0} otherwise.\n#' @examples \n#' library(CoopGame)\n#' cFuncDictatorVector(n=3,dictator=2)\n#' #Output:\n#' #An object of class \"GameVector\"\n#' #[1] 0 1 0 1 0 1 1\n#' \ncFuncDictatorVector<-function(n,dictator){\n  gameVector <- cFuncDictator(n,dictator)@A\n  return(gameVector)\n}\n\n\n#' @title cFuncDictator - class for coalition function to dictator\n#' @description Class for dictator coalition function, \n#' inherits methods and slots from class \\linkS4class{cFuncUnanimity}.\n#' Dictator game is a special case of an unanimity game, in which T one consists one player, the so called dictator.\n#' Here a coalitions wins if and only if the dictator is part of the coalition.\n#' @include cFuncUnanimity.R\n#' @exportClass cFuncDictator\n\nsetClass(\n  \"cFuncDictator\",\n  contains = \"cFuncUnanimity\",\n  validity = function(object){\n    paramCheckResult=getEmptyParamCheckResult()\n    stopOnInvalidDictator(paramCheckResult,dictator=object@T,n=object@n)\n  }\n)\n\nsetMethod(\n  f=\"initialize\",\n  signature = \"cFuncDictator\",\n  definition=function(.Object,n,dictator){\n    .Object<-methods::callNextMethod(.Object, n,T=dictator)\n    return(.Object)\n  }\n)\n\n#' @title Constructor for cFuncDictator\n#' @description \\strong{Constructor for a dictator game:} \\cr\n#' Any coalitions including the dictator receive coalition \n#' value \\code{1}. All the other coalitions, i.e. each and \n#' every coalition not containing the dictator, receives \n#' coalition value \\code{0}.\n#' @template cites/PETERS_2015\n#' @templateVar PETERS_2015_P p. 295\n#' @template author/JA\n#' @template author/JS\n#' @name cFuncDictator\n#' @template param/n\n#' @template param/dictator\n#' @return An S4 object representing the specified dictator game\n#' @export\n#' @section Related Functions: \n#' \\link{cFuncDictatorValue}, \\link{cFuncDictatorVector}\n#' @examples\n#' library(CoopGame) \n#' cFuncDictator(n=3,dictator=2)\n#' #Output:\n#' #An object of class \"cFuncDictator\"\n#' #Slot \"T\":\n#' #[1] 2\n#'\n#' #Slot \"A\":\n#' #An object of class \"GameVector\"\n#' #[1] 0 1 0 1 0 1 1\n#' \n#' #Slot \"n\":\n#' #An object of class \"NumberOfPlayers\"\n#' #[1] 3\n#' \ncFuncDictator<-function(n,dictator){\n  retCFuncDictator=methods::new(\"cFuncDictator\",n=n,dictator=dictator)\n  return(retCFuncDictator)\n}",
    "created" : 1536399721627.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4066977958",
    "id" : "1E821E47",
    "lastKnownWriteTime" : 1537387817,
    "last_content_update" : 1537387817,
    "path" : "C:/Users/Johannes/Dropbox/UNIVERSITAET/Master_Inf/MASTER_ARBEIT/SVN_REPO/CoopGame/R/cFuncDictator.R",
    "project_path" : "R/cFuncDictator.R",
    "properties" : {
    },
    "relative_order" : 92,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}