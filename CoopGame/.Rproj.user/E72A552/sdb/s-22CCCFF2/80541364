{
    "collab_server" : "",
    "contents" : "#' @name visualize\n#' @title visualize points or convex polyhedra\n#' @description Draws a convex polyhedron of the given points or draws a point\n#' @aliases visualize\n#' @export visualize\n#' @template param/A\n#' @param  pointsToDraw contains the points to draw\n#' @param  holdOn draws in a given screen\n#' @param  colour draws the polyhedron with this colour, all colour names can be seen with \"colors()\"\n#' @param  label activates the label for the figure\n#' @param  name set a name for the label\n#' @template author/FM\nvisualize <- function(A, pointsToDraw, holdOn=FALSE, colour = NA , label=FALSE, name = NULL){\n  if(is.vector(pointsToDraw)){\n    n=getNumberOfPlayers(A)\n    if(length(pointsToDraw)==n){\n      pointsToDraw=matrix(pointsToDraw,nrow=1,ncol=n)\n    }else{\n      print(\"Invalid points to draw.\")\n      return();\n    }\n  }\n  \n  \n  if(is.null(pointsToDraw) || nrow(pointsToDraw)==0){\n    print(\"The solution you would like to draw does not exist.\")\n    return();\n  }else{\n    tryCatch({logicVisualizer(A, pointsToDraw, holdOn, colour, label, name)},\n    error = function(cond){\n      logicVisualizer(A, pointsToDraw, holdOn=holdOn, colour , label, name )\n    })\n  }\n}\n\nlogicVisualizer <- function(A, pointsToDraw, holdOn, colour, label, name){ \n  \n  #tryCatch({Visualizer(...,holdOn = TRUE)},\n  #error = function(cond){\n  #  Visualizer(...,holdOn = FALSE)\n  #})\n  numberOfPlayers = ncol(pointsToDraw)\n  \n  #Controls, if the game vector and the points have the same number of players\n  if(numberOfPlayers == getNumberOfPlayers(A))\n  {\n    if(nrow(imputationsetVertices(A)) >= 3)\n    {\n    rows = nrow(pointsToDraw)\n    \n    #if there are 0 points, it can't be draw\n    if(rows != 0)\n    {\n      #there are 3 players\n      if(numberOfPlayers == 3)\n      {\n        \n        if(holdOn == FALSE){\n          #vertices of imputationset always will be labelled whenever \n          #subsets of the imputationset are drawn\n          imputationsetDraw(A, label=TRUE)\n        }\n        \n        #Checks the number of points and decide the kind of drawing\n        if(rows == 1)\n        {\n          Visualizer3Point(A = A, pointsToDraw = pointsToDraw, colour = colour, label = label, name = name)\n        }\n        else if(rows >= numberOfPlayers)\n        {\n          Visualizer3Set(A = A, pointsToDraw = pointsToDraw, colour = colour, label = label, name = name)\n        }\n        else\n        {\n          print(\"There are too few points for a 2D-draw!\")\n        }\n          \n      }\n      \n      #there are 4 players\n      else if(numberOfPlayers == 4)\n      {\n        if(holdOn==FALSE){\n          #Closes all rgl windows\n          while(rgl.cur()>0){\n            rgl.close();\n          }\n          imputationsetDraw(A, label=TRUE)\n        }\n        \n        #Checks the number of points and decide the kind of drawing\n        if(rows == 1)\n        {\n          Visualizer4Point(A = A, pointsToDraw = pointsToDraw, colour = colour, label = label, name = name)\n        }\n        else if(rows >= numberOfPlayers)\n        {\n          Visualizer4Set(A = A, pointsToDraw = pointsToDraw, colour = colour, label = label, name = name)\n        }\n        else\n        {\n          print(\"There are too few points for a 3D-draw!\")\n        }\n      }\n      else\n      {\n        print(\"The program can only draw if there are 3 or 4 players - that means 3 or 4 columns\")\n      }\n    }\n    else\n    {\n      print(\"There are no points to draw!\")\n    }\n    }\n    else\n    {\n      print(\"The imputation set as frame of the drawing has too few points\")\n    }\n  }\n  else\n  {\n    print(\"The game vector does not fit with the number of players of the points of the convex hull!\")\n  }\n}",
    "created" : 1525209104148.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3752687217",
    "id" : "80541364",
    "lastKnownWriteTime" : 1524387190,
    "last_content_update" : 1524387190,
    "path" : "C:/Users/Johannes/Dropbox/UNIVERSITAET/Master_Inf/MASTER_ARBEIT/SVN_REPO/CoopGame/R/Visualizer.R",
    "project_path" : "R/Visualizer.R",
    "properties" : {
    },
    "relative_order" : 15,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}