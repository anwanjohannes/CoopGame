{
    "collab_server" : "",
    "contents" : "#' @name colemanPreventivePowerIndex\n#' @title Coleman Preventive Power Index\n#' @description Calculates the Coleman Preventive Power Index for a specified simple TU game.\n#' Note that in general the Coleman Preventive Power Index is not an efficient vector, \n#' i.e. the sum of its entries is not always 1.\n#' Hence no drawing routine for the Coleman Preventive Power Index is provided.\n#' @aliases colemanPreventivePowerIndex\n#' @export colemanPreventivePowerIndex\n#' @template author/JS\n#' @template cites/COLEMAN_1971\n#' @templateVar COLEMAN_1971_P pp. 269 -- 300\n#' @template cites/CHAKRAVARTY_ET_AL_2015\n#' @templateVar CHAKRAVARTY_ET_AL_2015_P pp. 120 -- 123\n#' @template cites/DE_KEIJZER_2008\n#' @templateVar DE_KEIJZER_2008_P p. 18\n#' @inheritParams CoopGameBaseParams\n#' @return Coleman Preventive Power Index for specified simple game \n#' @examples \n#' A=c(0,0,0,1,1,0,1)\n#' colemanPreventivePowerIndex(A) \n#' #result: [1] 1.0000000 0.3333333 0.3333333\n#' \ncolemanPreventivePowerIndex<-function(A){\n  colemanPreventivePower=ColemanPreventivePowerConcept(A)\n  return(calculatePointSolution(colemanPreventivePower))\n}\n\n\n\nlogicColemanPreventivePowerIndex=function(A){\n  retVal=NULL\n  if(!isSimpleGame(A)){\n    print(\"Game is not simple. Therefore no Coleman Preventive Power Index can be retrieved.\")\n  }\n  else\n  {\n    n=getNumberOfPlayers(A)\n    bm=createBitMatrix(n,A)\n    numerator = numeric(n)\n    numerator = rawBanzhafIndex(A)\n    #the winning coalitions\n    wcs=bm[bm[,\"cVal\"]>0,,drop=FALSE]\n    colemanPreventivePower =sapply(c(1:n),function(i){numerator[i]/as.numeric(nrow(wcs))})\n    retVal=colemanPreventivePower\n  }\n  return(retVal)\n}\n\n#' @title ColemanPreventivePowerConcept\n#' @noRd\n#' @description ColemanPreventivePowerConcept\n#' @include PointSolutionConcept.R\n# @exportClass ColemanPreventivePowerConcept\n\nsetClass(\n  \"ColemanPreventivePowerConcept\",\n  contains = \"PointSolutionConcept\"\n)\n\n#' @rdname calculatePowerIndex-methods\n#' @aliases calculatePowerIndex,ColemanPreventivePowerConcept-method\nsetMethod(\n  \"calculatePointSolution\",\n  signature=\"ColemanPreventivePowerConcept\",\n  definition=function(.Object){\n    A<-.Object@A\n    return(logicColemanPreventivePowerIndex(A))\n  }\n)\n\n#' @title Constructor for ColemanPreventivePowerConcept\n#' @noRd\n#' @template author/JS\n#' @name ColemanPreventivePowerConcept\n#' #@export\nColemanPreventivePowerConcept<-function(A){\n  retcolemanPreventivePowerIndex=methods::new(\"ColemanPreventivePowerConcept\",A)\n  return(retcolemanPreventivePowerIndex)\n}\n\n\n\n\n",
    "created" : 1534322118339.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "5686796",
    "id" : "8AD3DC8A",
    "lastKnownWriteTime" : 1536426668,
    "last_content_update" : 1536426668,
    "path" : "C:/Users/Johannes/Dropbox/UNIVERSITAET/Master_Inf/MASTER_ARBEIT/SVN_REPO/CoopGame/R/ColemanPreventiveConcept.R",
    "project_path" : "R/ColemanPreventiveConcept.R",
    "properties" : {
    },
    "relative_order" : 75,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}