{
    "collab_server" : "",
    "contents" : "#' @name modiclus\n#' @title modiclus for n-player TU games\n#' @description Calculates the modiclus of a TU game with n players.\n#' @aliases modiclus\n#' @export modiclus\n#' @template author/JA\n#' @template cites/PELEG_ET_SUDHOELTER_2007\n#' @templateVar PELEG_ET_SUDHOELTER_2007_P p. 124 ff.\n#' @template cites/SUDHOELTER_1997\n#' @templateVar SUDHOELTER_1997_P pp. 147 -- 182\n#' @inheritParams CoopGameBaseParams\n#' @template param/enableTermOutLP\n#' @return Numeric vector of length n representing the Modified Nucleolus\n#' @examples\n#' modiclus(c(1, 1, 1, 2, 3, 4, 5))\n#' modiclus(c(0, 0, 0, 0, 5, 5, 8, 9, 10, 8, 13, 15, 16, 17, 21), FALSE)\n\nmodiclus <- function(A, enableTermOutLP = FALSE){\n  mn=Modiclus(A=A)\n  return(calculateNucleolus(mn,enableTermOutLP=enableTermOutLP))\n}\n\n\n#' @title Constructor for Modiclus\n#' @noRd\n#' @template author/JA\n#' @name Modiclus\n# @export\nModiclus<-function(A){\n  retModiclus=methods::new(\"Modiclus\",A=A)\n  return(retModiclus)\n}\n\n#' @title Modiclus - S4 class for Modiclus\n#' @noRd\n#' @description An S4 class for Modiclus concept\n#' @template author/JA\n#' @include NucleolusBase.R\n#' @name Modiclus\n# @exportClass Modiclus\n\n\n\nsetClass(\n  \"Modiclus\",\n  contains=\"NucleolusBase\"\n)\n\n\n#' @rdname initLPMatrix-methods\n#' @aliases initLPMatrix,Modiclus-method\nsetMethod(\n  \"initLPMatrix\",\n  signature=\"Modiclus\",\n  definition=function(.Object){\n    lpCoopGameUtils<-.Object@LPCoopGameUtils\n    n<-getNumberOfPlayers(.Object@A)\n    N<-length(.Object@A)\n    \n    tempBM<-as.data.frame(createBitMatrix(n))\n    lpMatrix<-matrix(ncol=(n+1),nrow=0)\n    for(i in 1:(nrow(tempBM)-1)){\n      currEntry=tempBM[i,]\n      corrEntries=tempBM[c(-i,-N),]\n      matTemp=matrix(\n        unlist(\n          apply(corrEntries,1,FUN=function(x){\n            currEntry-x\n            })\n        ),\n        ncol=(n+1),\n        byrow = TRUE\n      )\n      lpMatrix=rbind(lpMatrix,matTemp)\n    }\n    lpMatrix[,(n+1)]=1\n    lpMatrix=rbind(lpMatrix,c(rep(1,n),0))\n    colnames(lpMatrix)[(n+1)]<-\"cVal\"\n    \n    setMatrix(lpCoopGameUtils)<-lpMatrix\n    eval.parent(substitute(.Object@LPCoopGameUtils<-lpCoopGameUtils))\n  }\n)\n\n\n\n#' @rdname initLPRows-methods\n#' @aliases initLPRows,Modiclus-method\nsetMethod(\n  \"initLPRows\",\n  signature=\"Modiclus\",\n  definition=function(.Object){\n    lpCoopGameUtils<-.Object@LPCoopGameUtils\n    N<-length(.Object@A)\n    n<-getNumberOfPlayers(.Object@A)\n    A<-.Object@A\n    rlb<-c()\n    N=length(A)\n    for(i in 1:(N-1)){   \n      valuesOfT=A[c(-i,-N)] \n      rlbValues=sapply(valuesOfT,function(x){A[i]-x})\n      rlb<-c(rlb,rlbValues)\n    }\n    rlb<-c(rlb,A[N])\n    setRlb(lpCoopGameUtils)<-rlb\n    setRub(lpCoopGameUtils)<-c(rep(Inf, length(rlb) - 1), .Object@A[N])\n    setRtype(lpCoopGameUtils)<-c(rep(GLP_LO, length(rlb) - 1), GLP_FX)\n    eval.parent(substitute(.Object@LPCoopGameUtils<-lpCoopGameUtils))\n  }\n)\n\n\n\n\ndetermineModiclusMatrix<-function(A){\n\n  n=getNumberOfPlayers(A)\n  N=length(A)\n    \n  tempBM<-as.data.frame(createBitMatrix(n))\n  lpMatrix<-matrix(ncol=(n+1),nrow=0)\n  for(i in 1:(nrow(tempBM)-1)){ #original (nrow(tempBM)-1))\n    currEntry=tempBM[i,]\n    corrEntries=tempBM[c(-i,-N),] #original c(-i,-N)\n    matTemp=matrix(unlist(apply(corrEntries,1,FUN=function(x){currEntry-x})),ncol=(n+1),byrow = TRUE)\n    lpMatrix=rbind(lpMatrix,matTemp)\n  }\n  lpMatrix[,(n+1)]=1\n  lpMatrix=rbind(lpMatrix,c(rep(1,n),0))\n  colnames(lpMatrix)[(n+1)]<-\"cVal\"\n  return(lpMatrix)\n}\n\n\ndetermineModiclusRlb<-function(A){\n  rlb<-c()\n  N=length(A)\n  for(i in 1:(N-1)){   #originial (N-1)\n    valuesOfT=A[c(-i,-N)] #original c(-i,-N)\n    rlbValues=sapply(valuesOfT,function(x){A[i]-x})\n    rlb<-c(rlb,rlbValues)\n  }\n\n  rlb<-c(rlb,A[N])\n  return(rlb)\n}\n\n\n#' @name drawModiclus\n#' @title drawModiclus for n players\n#' @description drawModiclus draws the Modiclus for n players.\n#' @aliases drawModiclus\n#' @export drawModiclus\n#' @template author/JA\n#' @template cites/PELEG_ET_SUDHOELTER_2007\n#' @templateVar PELEG_ET_SUDHOELTER_2007_P p. 124 ff.\n#' @template cites/SUDHOELTER_1997\n#' @templateVar SUDHOELTER_1997_P pp. 147 -- 182\n#' @inheritParams CoopGameBaseParams\n#' @inheritParams visualize\n#' @examples\n#' A=c(1, 1, 1, 2, 3, 4, 5)\n#' drawModiclus(A)\ndrawModiclus<-function(A,holdOn=FALSE, colour = NA , label=TRUE, name = \"Modiclus\"){\n  A=GameVector(A)\n  mod=modiclus(A);\n  visualize(A, pointsToDraw=mod, holdOn=holdOn, colour = colour , label=label, name = name)\n}\n",
    "created" : 1534234925172.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4171103252",
    "id" : "9A6332F7",
    "lastKnownWriteTime" : 1514911266,
    "last_content_update" : 1514911266,
    "path" : "C:/Users/Johannes/Dropbox/UNIVERSITAET/Master_Inf/MASTER_ARBEIT/SVN_REPO/CoopGame/R/Modiclus.R",
    "project_path" : "R/Modiclus.R",
    "properties" : {
        "source_window_id" : ""
    },
    "relative_order" : 37,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}