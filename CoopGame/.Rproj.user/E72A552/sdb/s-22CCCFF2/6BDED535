{
    "collab_server" : "",
    "contents" : "#' @name deeganPackelIndex\n#' @title deeganPackelIndex\n#' @description deeganPackelIndex calculates the Deegan Packel index for simple games\n#' @aliases deeganPackelIndex\n#' @export deeganPackelIndex\n#' @template author/JA\n#' @template author/MM\n#' @template author/JS\n#' @template cites/DEEGAN_ET_PACKEL_1978\n#' @templateVar DEEGAN_ET_PACKEL_1978_P pp. 151-161\n#' @template cites/HOLLER_ET_ILLING_2006\n#' @templateVar HOLLER_ET_ILLING_2006_P pp. 323\n#' @inheritParams CoopGameBaseParams \n#' @return Deegan Packel Values for a specified simple game\n#' @examples\n#'  #Example out of HOLLER & ILLING (2006), chapter 6.3.3\n#'  # v=(51;35,20,15,15,15) => dpv=(18/60,9/60,11/60,11/60,11/60)\n#'  A=generateGameVector(v =cFuncQuota,n = 5, w=c(35,20,15,15,15), q=51)\n#'  deeganPackelIndex(A)\n#'  #Output (same to expected as in HOLLER & ILLING chapter 6.3.3) :\n#'  #[1] 0.3000000 0.1500000 0.1833333 0.1833333 0.1833333\n#'\ndeeganPackelIndex<-function(A){\n  dpi=DeeganPackelConcept(A)\n  return(calculatePowerIndex(dpi))\n}\n\nlogicDeeganPackelIndex=function(A){\n  retVal=NULL\n  if(!isSimpleGame(A)){\n    print(\"Game is not simple. Therefore no Deegan Packel Index can be retrieved.\")\n  }\n  else\n  {\n    #Create to game vector A corresponding bit matrix\n    n=getNumberOfPlayers(A)\n  \n  \n    #Determine minimum winning coalitions in bit matrix\n    minimumWinningCoalitions=getMinimumWinningCoalitions(A)\n  \n    #determine cardinality of minimum winning coalitions in bit matrix\n    cardMWC=nrow(minimumWinningCoalitions)\n    dpv=c()\n  \n    if(cardMWC==0){\n      #if there are no minimum winning coalitions (e.g for A=rep(0,15))\n      #each players gets an deegan packel value of 0\n      # Well, actually CoopGame is supposed not accept null games ...:-)\n      dpv=rep(0,n)\n    }else{\n      #if there are minimum winning coalitions, they determine Deegan Packel Index\n  \n      #Determine constant factor which is same for each player\n      #=> 1 divided by number of minimum winning coalitions\n      constFactor=1/cardMWC\n  \n      #Loop through all players and determine each player's specific deegan packel value\n      for(i in 1:n){\n        sumvKDivk=0\n        minimumWinningCoalitionsOfI=minimumWinningCoalitions[minimumWinningCoalitions[,i]==1,,drop=FALSE]\n        if(nrow(minimumWinningCoalitionsOfI)!=0){\n          #Loop through all minimum winning coalitions of player i\n          for(j in 1:nrow(minimumWinningCoalitionsOfI)){\n            #determine k as sum of players involved in current row  of minimumWinningCoalitionsOfI\n            k=sum(minimumWinningCoalitionsOfI[j,1:n] == 1)\n            #determine each player's specific part of the deegan packel equatation\n            sumvKDivk=sumvKDivk+minimumWinningCoalitionsOfI[j,\"cVal\"]/k\n          }\n  \n          #Deegan Packel Index is calculated by multiplying constant factor and specific part of each player\n          dpv[i]=constFactor*(sumvKDivk)\n        }else{\n          #if player i is not involved in any minimum winning coalition he gets value 0 allocated\n          dpv[i]=0\n        }\n      }\n    }\n    \n    # if(sum(dpv)>1){\n    #   dpv=dpv/sum(dpv)\n    # }\n    retVal = dpv\n  }\n  return(retVal)\n}\n\n#' @title DeeganPackelConcept - class for Deegan Packel Concept\n#' @noRd\n#' @include PointSolutionConcept.R\n#' #@exportClass DeeganPackelConcept\n\nsetClass(\n  \"DeeganPackelConcept\",\n  contains = \"PointSolutionConcept\"\n)\n\n#' @title Constructor for DeeganPackelConcept\n#' @noRd\n#' @template author/JA\n#' @name DeeganPackelConcept\n#' #@export\nDeeganPackelConcept<-function(A){\n  retDeeganPackelConcept=methods::new(\"DeeganPackelConcept\",A)\n  return(retDeeganPackelConcept)\n}\n\n#' @rdname calculatePowerIndex-methods\n#' @aliases calculatePowerIndex,DeeganPackelConcept-method\nsetMethod(\n  \"calculatePowerIndex\",\n  signature=\"DeeganPackelConcept\",\n  definition=function(.Object){\n    A<-.Object@A\n    return(logicDeeganPackelIndex(A))\n  }\n)\n\n\n\n",
    "created" : 1534234141641.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "775757964",
    "id" : "6BDED535",
    "lastKnownWriteTime" : 1534345789,
    "last_content_update" : 1534345789,
    "path" : "C:/Users/Johannes/Dropbox/UNIVERSITAET/Master_Inf/MASTER_ARBEIT/SVN_REPO/CoopGame/R/DeeganPackelConcept.R",
    "project_path" : "R/DeeganPackelConcept.R",
    "properties" : {
    },
    "relative_order" : 32,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}