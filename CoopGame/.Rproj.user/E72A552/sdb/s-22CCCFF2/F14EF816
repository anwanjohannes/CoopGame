{
    "collab_server" : "",
    "contents" : "#' @title NucleolusBase - Base class for various Nucleolus derivatives\n#' @template author/JA\n#' @description An S4 class for various solution concepts based on the solution concept Nucleolus. It inherits methods and slots from class\n#' \\linkS4class{PointSolutionConcept}\n#' @include LPCoopGameUtils.R\n#' @include PointSolutionConcept.R\n#' @import glpkAPI\n#' @slot LPCoopGameUtils instance of \\linkS4class{LPCoopGameUtils}\n#' @exportClass NucleolusBase\n\n\nsetClass(\n  \"NucleolusBase\",\n  contains = \"PointSolutionConcept\",\n  representation(\n    LPCoopGameUtils=\"LPCoopGameUtils\",\n    \"VIRTUAL\"\n  )\n)\n\n#' @title Method updateLPBndsObjCoefs\n#' @description This method updates the \\linkS4class{LPBndsObjCoefs} \n#' class and sets attributes.\n#' @rdname updateLPBndsObjCoefs-methods\n#' @include LPBndsObjCoefs.R\n#' @docType methods\n#' @template author/JA\n#' @template param/Object\n#' @exportMethod updateLPBndsObjCoefs\n\nsetGeneric(\n  \"updateLPBndsObjCoefs\",\n  function(.Object){\n    standardGeneric(\"updateLPBndsObjCoefs\")\n  }\n)\n\n#' @rdname updateLPBndsObjCoefs-methods\n#' @aliases updateLPBndsObjCoefs,NucleolusBase-method\nsetMethod(\n  \"updateLPBndsObjCoefs\",\n  signature=\"NucleolusBase\",\n  definition=function(.Object){\n    NULL\n  }\n)\n\nsetMethod(\n  f=\"initialize\",\n  signature = \"NucleolusBase\",\n  definition =  function(.Object, ...) {\n    .Object<-methods::callNextMethod(.Object, ...)\n    .Object@LPCoopGameUtils<-LPCoopGameUtils()\n    initLPMatrix(.Object)\n    initLPRows(.Object)\n    initLPBndsObjCoefs(.Object)\n    updateLPCoopGameUtils(.Object@LPCoopGameUtils)\n    return(.Object)\n  }\n)\n\n\n#' @title Method updateNucleolusBase\n#' @description This method updates the nucleolus class and sets attributes.\n#' @rdname updateNucleolusBase-methods\n#' @docType methods\n#' @template author/JA\n#' @template param/Object\n#' @exportMethod updateNucleolusBase\nsetGeneric(\n  \"updateNucleolusBase\",\n  function(.Object){\n    standardGeneric(\"updateNucleolusBase\")\n  }\n)\n\n#' @rdname updateNucleolusBase-methods\n#' @aliases updateNucleolusBase,NucleolusBase-method\nsetMethod(\n  \"updateNucleolusBase\",\n  signature=\"NucleolusBase\",\n  definition=function(.Object){\n    obj<-.Object\n    updateLPMatrix(obj)\n    updateLPRows(obj)\n    updateLPBndsObjCoefs(obj)\n    updateLPCoopGameUtils(obj@LPCoopGameUtils)\n    eval.parent(substitute(.Object<-obj))\n  }\n)\n\n\n#' @title Method updateLPMatrix\n#' @description This method updates the \\linkS4class{LPMatrix} class and sets attributes.\n#' @rdname updateLPMatrix-methods\n#' @docType methods\n#' @template author/JA\n#' @template param/Object\n#' @exportMethod updateLPMatrix\n\nsetGeneric(\n  \"updateLPMatrix\",\n  function(.Object){\n    standardGeneric(\"updateLPMatrix\")\n  }\n)\n\n#' @rdname updateLPMatrix-methods\n#' @aliases updateLPMatrix,NucleolusBase-method\nsetMethod(\n  \"updateLPMatrix\",\n  signature=\"NucleolusBase\",\n  definition=function(.Object){\n    lpCoopGameUtils<-.Object@LPCoopGameUtils\n    excessCoefs=getMatrixLastCol(lpCoopGameUtils)\n    pos=getLPDualSolutionPos(.Object)\n    excessCoefs[pos]<-0\n    setMatrixLastCol(lpCoopGameUtils)<-excessCoefs\n    eval.parent(substitute(.Object@LPCoopGameUtils<-lpCoopGameUtils))\n  }\n)\n\n\n#' @title Method getLPCoopGameUtils\n#' @description This method updates the \\linkS4class{LPCoopGameUtils} class and sets attributes.\n#' @rdname getLPCoopGameUtils-methods\n#' @docType methods\n#' @template author/JA\n#' @template param/Object\n#' @exportMethod getLPCoopGameUtils\n\nsetGeneric(\n  \"getLPCoopGameUtils\",\n  function(.Object){\n    standardGeneric(\"getLPCoopGameUtils\")\n  }\n)\n\n#' @rdname getLPCoopGameUtils-methods\n#' @aliases getLPCoopGameUtils,NucleolusBase-method\nsetMethod(\n  \"getLPCoopGameUtils\",\n  signature=\"NucleolusBase\",\n  definition=function(.Object){\n    return(.Object@LPCoopGameUtils)\n  }\n)\n\n#' @title Method setLPCoopGameUtils\n#' @description This method sets \\linkS4class{LPCoopGameUtils} class as attribute.\n#' @rdname setLPCoopGameUtils-methods\n#' @docType methods\n#' @template author/JA\n#' @template param/Object\n#' @template param/value\n#' @exportMethod setLPCoopGameUtils<-\nsetGeneric(\n  \"setLPCoopGameUtils<-\",\n  function(.Object,value){\n    standardGeneric(\"setLPCoopGameUtils<-\")\n  }\n  \n)\n\n#' @rdname setLPCoopGameUtils-methods\n#' @aliases setLPCoopGameUtils<-,NucleolusBase-method\nsetReplaceMethod(\n  \"setLPCoopGameUtils\",\n  signature=\"NucleolusBase\",\n  definition=function(.Object,value){\n    .Object@LPCoopGameUtils<-value\n    return(.Object)\n  }\n)\n\n\n#' @title Method getLPRowsBoundsFunc\n#' @description This method determines the value for the row bound.\n#' @rdname getLPRowsBoundsFunc-methods\n#' @docType methods\n#' @template author/JA\n#' @param x restriction which is processed\n#' @param pos row index of restriction in coefficients matrix\n#' @template param/Object\n#' @exportMethod getLPRowsBoundsFunc\n\nsetGeneric(\n  \"getLPRowsBoundsFunc\",\n  function(.Object,x,pos){\n    standardGeneric(\"getLPRowsBoundsFunc\")\n  }\n)\n\n#' @rdname getLPRowsBoundsFunc-methods\n#' @aliases getLPRowsBoundsFunc,NucleolusBase-method\nsetMethod(\n  \"getLPRowsBoundsFunc\",\n  signature=\"NucleolusBase\",\n  definition=function(.Object,x,pos){\n    primal=getLPPrimalSolution(.Object@LPCoopGameUtils)\n    n=length(primal)\n    primal=primal[-n]\n    return(sum(x[-n] * primal[-n]))\n  }\n)\n\n#' @title Method updateLPRows\n#' @description This method updates the instance of \\linkS4class{LPRows} and sets attributes.\n#' @rdname updateLPRows-methods\n#' @docType methods\n#' @template author/JA\n#' @template param/Object\n#' @exportMethod updateLPRows\n\nsetGeneric(\n  \"updateLPRows\",\n  function(.Object){\n    standardGeneric(\"updateLPRows\")\n  }\n)\n\n#' @rdname updateLPRows-methods\n#' @aliases updateLPRows,NucleolusBase-method\nsetMethod(\n  \"updateLPRows\",\n  signature=\"NucleolusBase\",\n  definition=function(.Object){\n    lpCoopGameUtils<-.Object@LPCoopGameUtils\n    rlb=getRlb(lpCoopGameUtils)\n    rub=getRub(lpCoopGameUtils)\n    rtype=getRtype(lpCoopGameUtils)\n    pos=getLPDualSolutionPos(.Object)\n    coeffMat=getMatrix(lpCoopGameUtils)[pos,,drop=FALSE]\n    rlb[pos] <- rub[pos] <- apply(\n      coeffMat,1,FUN = getLPRowsBoundsFunc,.Object=.Object,pos=pos\n    )\n    rtype[pos] <- GLP_FX\n    setRlb(lpCoopGameUtils)<-rlb\n    setRub(lpCoopGameUtils)<-rub\n    setRtype(lpCoopGameUtils)<-rtype\n    eval.parent(substitute(.Object@LPCoopGameUtils<-lpCoopGameUtils))\n  }\n)\n\n\n#' @title Method getLPDualSolutionPos\n#' @description This method identifies the restrictions to be updated.\n#' @rdname getLPDualSolutionPos-methods\n#' @docType methods\n#' @template author/JA\n#' @template param/Object\n#' @exportMethod getLPDualSolutionPos\n\nsetGeneric(\n  \"getLPDualSolutionPos\",\n  function(.Object){\n    standardGeneric(\"getLPDualSolutionPos\")\n  }\n)\n\n#' @rdname getLPDualSolutionPos-methods\n#' @aliases getLPDualSolutionPos,NucleolusBase-method\nsetMethod(\n  \"getLPDualSolutionPos\",\n  signature=\"NucleolusBase\",\n  definition=function(.Object){\n    return(which(getLPDualSolution(.Object@LPCoopGameUtils)>0))\n  }\n)\n\n#' @title Method initLPRows\n#' @description This method initializes the class \\linkS4class{LPRows}.\n#' @rdname initLPRows-methods\n#' @docType methods\n#' @template author/JA\n#' @template param/Object\n#' @exportMethod initLPRows\n\nsetGeneric(\n  \"initLPRows\",\n  function(.Object){\n    standardGeneric(\"initLPRows\")\n  }\n)\n\n#' @rdname initLPRows-methods\n#' @aliases initLPRows,NucleolusBase-method\nsetMethod(\n  \"initLPRows\",\n  signature=\"NucleolusBase\",\n  definition=function(.Object){\n    lpCoopGameUtils<-.Object@LPCoopGameUtils\n    N<-length(.Object@A)\n    setRlb(lpCoopGameUtils)<-.Object@A\n    setRub(lpCoopGameUtils)<-c(rep(Inf, N - 1), .Object@A[N])\n    setRtype(lpCoopGameUtils)<-c(rep(GLP_LO, N - 1), GLP_FX)\n    eval.parent(substitute(.Object@LPCoopGameUtils<-lpCoopGameUtils))\n  }\n)\n\n\n#' @title Method initLPMatrix\n#' @description This method initializes the class \\linkS4class{LPMatrix}.\n#' @rdname initLPMatrix-methods\n#' @docType methods\n#' @template author/JA\n#' @template param/Object\n#' @exportMethod initLPMatrix\n\nsetGeneric(\n  \"initLPMatrix\",\n  function(.Object){\n    standardGeneric(\"initLPMatrix\")\n  }\n)\n\n#' @rdname initLPMatrix-methods\n#' @aliases initLPMatrix,NucleolusBase-method\nsetMethod(\n  \"initLPMatrix\",\n  signature=\"NucleolusBase\",\n  definition=function(.Object){\n    lpCoopGameUtils<-.Object@LPCoopGameUtils\n    excess<-determineExcessCoefficients(.Object)\n    coeffMat<-createBitMatrix(n=getNumberOfPlayers(.Object@A),excess)\n    setMatrix(lpCoopGameUtils)<-coeffMat\n    eval.parent(substitute(.Object@LPCoopGameUtils<-lpCoopGameUtils))\n  }\n)\n\n#' @title Method initLPBndsObjCoefs\n#' @description This method initializes the class \\linkS4class{LPBndsObjCoefs}.\n#' @rdname initLPBndsObjCoefs-methods\n#' @docType methods\n#' @template author/JA\n#' @template param/Object\n#' @exportMethod initLPBndsObjCoefs\nsetGeneric(\n  \"initLPBndsObjCoefs\",\n  function(.Object){\n    standardGeneric(\"initLPBndsObjCoefs\")\n  }\n)\n\n#' @rdname initLPBndsObjCoefs-methods\n#' @aliases initLPBndsObjCoefs,NucleolusBase-method\nsetMethod(\n  \"initLPBndsObjCoefs\",\n  signature=\"NucleolusBase\",\n  definition=function(.Object){\n    lpCoopGameUtils<-.Object@LPCoopGameUtils\n    n=getNumberOfPlayers(.Object@A)\n    setClb(lpCoopGameUtils)<- c(.Object@A[1:n], -Inf) #changed from c(rep(0, n), -Inf)\n    setCub(lpCoopGameUtils)<- rep(Inf, n + 1)\n    setCtype(lpCoopGameUtils)<- c(rep(GLP_DB, n), GLP_FR)\n    setObj(lpCoopGameUtils)<- c(rep(0, n), 1)\n    eval.parent(substitute(.Object@LPCoopGameUtils<-lpCoopGameUtils))\n  }\n)\n\n#' @title Method determineExcessCoefficients\n#' @description This method determines the excess coefficients.\n#' @rdname determineExcessCoefficients-methods\n#' @docType methods\n#' @template author/JA\n#' @template param/Object\n#' @exportMethod determineExcessCoefficients\nsetGeneric(\n  \"determineExcessCoefficients\",\n  function(.Object){\n    standardGeneric(\"determineExcessCoefficients\")\n  }\n)\n\n#' @rdname determineExcessCoefficients-methods\n#' @aliases determineExcessCoefficients,NucleolusBase-method\nsetMethod(\n  \"determineExcessCoefficients\",\n  signature=\"NucleolusBase\",\n  definition=function(.Object){\n    N=length(.Object@A)\n    return(c(rep(1,N-1),0))\n  }\n)\n\n\n#' @title Method checkAbort\n#' @description This method checks if calculation of nucleolus should be aborted.\n#' @rdname checkAbort-methods\n#' @docType methods\n#' @template author/JA\n#' @template param/Object\n#' @param oldObjValue previous value of objective function\n#' @exportMethod checkAbort\nsetGeneric(\n  \"checkAbort\",\n  function(.Object,oldObjValue){\n    standardGeneric(\"checkAbort\")\n  }\n)\n\n#' @rdname checkAbort-methods\n#' @aliases checkAbort,NucleolusBase-method\nsetMethod(\n  \"checkAbort\",\n  signature=\"NucleolusBase\",\n  definition=function(.Object,oldObjValue){\n    retVal=FALSE\n    lpCoopGameUtils<-.Object@LPCoopGameUtils\n    if((!is.null(oldObjValue))){\n      if(oldObjValue==getLPObjVal(lpCoopGameUtils)){\n        retVal=TRUE\n      }\n    }else if(!isLPFeasible(lpCoopGameUtils)){\n      stop(\"No Solution exists for this game.\")\n    }\n    return(retVal)\n  }\n)\n\n\n#' @title Method checkGamePreconditions\n#' @description This method checks if preconditions for the calculation of nucleolus are satisfied.\n#' @rdname checkGamePreconditions-methods\n#' @docType methods\n#' @template author/JA\n#' @template param/Object\n#' @exportMethod checkGamePreconditions\nsetGeneric(\n  \"checkGamePreconditions\",\n  function(.Object){\n    standardGeneric(\"checkGamePreconditions\")\n  }\n)\n\n#' @rdname checkGamePreconditions-methods\n#' @aliases checkGamePreconditions,NucleolusBase-method\nsetMethod(\n  \"checkGamePreconditions\",\n  signature=\"NucleolusBase\",\n  definition=function(.Object){\n    boolEssentialOrDegenerateGame=(isEssentialGame(.Object@A) || isDegenerateGame(.Object@A))\n    if(!boolEssentialOrDegenerateGame){\n      stop(\"Nucleolus solution is stopped as game is neither essential nor degenerate.\")\n    }\n  }\n)\n\n\n\n#' @title Method calculateNucleolus\n#' @description This method calculates the nucleolus or one of its derivatives.\n#' @rdname calculateNucleolus-methods\n#' @docType methods\n#' @template author/JA\n#' @template param/Object\n#' @template param/enableTermOutLP\n#' @template cites/PELEG_ET_SUDHOELTER_2007\n#' @templateVar PELEG_ET_SUDHOELTER_2007_P p. 82 ff.\n#' @exportMethod calculateNucleolus\nsetGeneric(\n  \"calculateNucleolus\",\n  function(.Object,enableTermOutLP=FALSE){\n    standardGeneric(\"calculateNucleolus\")\n  }\n)\n\n\n#' @rdname calculateNucleolus-methods\n#' @aliases calculateNucleolus,NucleolusBase-method\nsetMethod(\n  \"calculateNucleolus\",\n  signature=\"NucleolusBase\",\n  definition=function(.Object,enableTermOutLP = FALSE){\n    checkGamePreconditions(.Object)\n    N=getNumberOfRows(.Object@LPCoopGameUtils)\n    oldObjValue=NULL\n    primal=NULL\n    \n    for(i in 1:N){\n      solveLP(.Object@LPCoopGameUtils,enableTermOutLP)\n      \n      if(checkAbort(.Object,oldObjValue)){\n        break\n      }\n      \n      oldObjValue=getLPObjVal(.Object@LPCoopGameUtils)\n      primal=getLPPrimalSolution(.Object@LPCoopGameUtils)\n      updateNucleolusBase(.Object)\n      \n      if(all(getMatrixLastCol(.Object@LPCoopGameUtils)==0)) {\n        break\n      }\n      \n    }\n    return((primal[-length(primal)]))\n  }\n)\n\n#' @rdname calculatePointSolution-methods\n#' @aliases calculatePointSolution,NucleolusBase-method\nsetMethod(\n  \"calculatePointSolution\",\n  signature=\"NucleolusBase\",\n  definition=function(.Object){\n    calculateNucleolus(.Object)\n  }\n)\n\n\n#' @rdname calculateSolution-methods\n#' @aliases calculateSolution,NucleolusBase-method\nsetMethod(\n  \"calculateSolution\",\n  signature=\"NucleolusBase\",\n  definition=function(.Object){\n    calculateNucleolus(.Object)\n  }\n)",
    "created" : 1534250909786.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1462518606",
    "id" : "F14EF816",
    "lastKnownWriteTime" : 1538064275,
    "last_content_update" : 1538064275,
    "path" : "C:/Users/Johannes/Dropbox/UNIVERSITAET/Master_Inf/MASTER_ARBEIT/SVN_REPO/CoopGame/R/NucleolusBase.R",
    "project_path" : "R/NucleolusBase.R",
    "properties" : {
        "source_window_id" : "",
        "tempName" : "Untitled4"
    },
    "relative_order" : 54,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}