{
    "collab_server" : "",
    "contents" : "#' @name centroidCoreCover\n#' @title centroidCoreCover\n#' @description Calculates the centroid of the core cover for specified game.\n#' @aliases centroidCoreCover\n#' @export centroidCoreCover\n#' @template author/JS\n#' @template cites/BRANZEI_ET_AL_2006\n#' @templateVar BRANZEI_ET_AL_2006_P p. 31\n#' @template cites/TIJS_1981\n#' @inheritParams CoopGameBaseParams\n#' @return It calculates the centroid of the core cover for a game specified by a game vector A.\n#' @examples\n#' #Example for centroid of the core cover\n#' A=c(0,0,0,2,2,3,5)\n#' centroidCoreCover(A) \n#' #[1] 1 2 2\n#' \ncentroidCoreCover<-function(A){\n  tv=CentroidCoreCoverConcept(A)\n  return(calculatePointSolution(tv))\n}\n\nlogicCentroidCoreCover<-function(A){\n  retVal=NULL\n  n=getNumberOfPlayers(A)\n  N=length(A)\n  \n  if(!isQuasiBalancedGame(A)){\n    print(\"Game is not quasi balanced therefore no centroid of the core cover can be retrieved\")\n  }else{\n    setVertices=coreCoverVertices(A)\n    centroid=colSums(setVertices)/nrow(setVertices)\n    retVal = centroid\n  }\n  return(retVal)\n}\n\n\n#' @title CentroidCoreCoverConcept - S4 class for centroid core cover concept\n#' @name CentroidCoreCoverConceptClass\n#' @noRd\n#' @description S4 class containing logic for solving centroid core cover concept\n#' @include PointSolutionConcept.R\n#' #@exportClass CentroidCoreCoverConcept\n\nsetClass(\n  \"CentroidCoreCoverConcept\",\n  contains = \"PointSolutionConcept\"\n)\n\n#' @title Constructor for CentroidCoreCoverConcept\n#' @noRd\n#' @template author/JS\n#' @name CentroidCoreCoverConcept\n#' @inheritParams CoopGameBaseParams\n#'# @export\nCentroidCoreCoverConcept<-function(A){\n  retCentroidCoreCoverConcept=methods::new(\"CentroidCoreCoverConcept\",A)\n  return(retCentroidCoreCoverConcept)\n}\n#' @rdname calculatePointSolution-methods\n#' @aliases calculatePointSolution,CentroidCoreCoverConcept-method\nsetMethod(\n  \"calculatePointSolution\",\n  signature=\"CentroidCoreCoverConcept\",\n  definition=function(.Object){\n    A<-.Object@A\n    return(logicCentroidCoreCover(A))\n  }\n)\n\n#' @name drawCentroidCoreCover\n#' @title drawCentroidCoreCover for 3 or 4 players\n#' @family CentroidCoreCoverConcept\n#' @family PointSolutionConcept\n#' @description drawCentroidCoreCover draws the centroid of the core cover for 3 or 4 players.\n#' @aliases drawCentroidCoreCover\n#' @export drawCentroidCoreCover\n#' @template author/JS\n#' @template cites/BRANZEI_ET_AL_2006\n#' @templateVar BRANZEI_ET_AL_2006_P p. 31\n#' @template cites/TIJS_1981\n#' @inheritParams CoopGameBaseParams\n#' @inheritParams visualize\n#' @examples\n#' A=c(0,0,5,4,8,9,12)\n#' drawCentroidCoreCover(A,colour=\"green\")\ndrawCentroidCoreCover<-function(A,holdOn=FALSE, colour = NA , label=TRUE, name = \"centroid of core cover\"){\n  A=GameVector(A)\n  pcn=centroidCoreCover(A);\n  visualize(A, pointsToDraw=pcn, holdOn=holdOn, colour = colour , label=label, name = name)\n}\n",
    "created" : 1534321858809.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3132204069",
    "id" : "EDAC1B0E",
    "lastKnownWriteTime" : 1534321874,
    "last_content_update" : 1534321874970,
    "path" : "C:/Users/Johannes/Dropbox/UNIVERSITAET/Master_Inf/MASTER_ARBEIT/SVN_REPO/CoopGame/R/CentroidCoreCoverConcept.R",
    "project_path" : "R/CentroidCoreCoverConcept.R",
    "properties" : {
    },
    "relative_order" : 69,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}