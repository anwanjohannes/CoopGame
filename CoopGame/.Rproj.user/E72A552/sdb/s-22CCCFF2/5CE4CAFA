{
    "collab_server" : "",
    "contents" : "#' @name isImputation\n#' @title isImputation for proving the imputation criteria\n#' @description isImputation checks if a given allocation x is an imputation.\n#' @aliases isImputation\n#' @export isImputation\n#' @template author/JA\n#' @inheritParams CoopGameBaseParams\n#' @param tolerance represents tolerance for checking imputation property\n#' @template param/x\n#' @return  \\code{TRUE} if allocation fits imputation criteria and \\code{FALSE} otherwise\n#' @examples \n#' #no imputation\n#' library(CoopGame)\n#' isImputation(x=c(1,1,1),A=c(1:7))\n#'\nisImputation<-function(x,A,tolerance=1e-12){\n  tv=AllocationPropertyImputation(A,x=x,tolerance)\n  return(determineProperty(tv))\n}\n\nlogicIsImputation<-function(A,x,tolerance){\n  n=getNumberOfPlayers(A)\n  retVal=TRUE\n  #check Pareto efficiency x1+..+xn = v(N)\n  if(abs(sum(x)-A[length(A)])>tolerance){\n    print(\"Constraint for Pareto efficiency is hurt\")\n    retVal=FALSE\n  #individual rationality\n  }else if(!all(A[1:n]<=x,TRUE)){\n    print(\"Constraint for individual rationality is hurt\")\n    retVal=FALSE\n  }\n  return(retVal)\n}\n\n\n\n#' @title AllocationPropertyImputation -  class for checking imputation property\n#' @noRd\n#' @description Class for implementation of imputation concept \n#' @include GameProperty.R\n#'# @exportClass AllocationPropertyImputation\n\nsetClass(\n  \"AllocationPropertyImputation\",\n  contains = \"AllocationProperty\",\n  representation(\n    tolerance = \"numeric\"\n  )\n)\n\n#' @title Constructor for AllocationPropertyImputation\n#' @noRd\n#' @template author/JA\n#' @name AllocationPropertyImputation\n#' #@export\nAllocationPropertyImputation<-function(A,x=x,tolerance=1e-12){\n  retAP=methods::new(\"AllocationPropertyImputation\",A,x=x,tolerance=tolerance)\n  return(retAP)\n}\n\n#' @rdname determineProperty-methods\n#' @aliases determineProperty,AllocationPropertyImputation-method\nsetMethod(\n  \"determineProperty\",\n  signature=\"AllocationPropertyImputation\",\n  definition=function(.Object){\n    A<-.Object@A\n    x<-.Object@x\n    tolerance<-.Object@tolerance\n    return(logicIsImputation(A,x,tolerance))\n  }\n)\n\nsetMethod(\n  f=\"initialize\",\n  signature = \"AllocationPropertyImputation\",\n  definition =  function(.Object, ...,tolerance) {\n    .Object@tolerance<-tolerance\n    .Object<-methods::callNextMethod(.Object, ...)\n    return(.Object)\n  }\n)\n\n\n",
    "created" : 1534251606230.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1534945940",
    "id" : "5CE4CAFA",
    "lastKnownWriteTime" : 1537215659,
    "last_content_update" : 1537215659,
    "path" : "C:/Users/Johannes/Dropbox/UNIVERSITAET/Master_Inf/MASTER_ARBEIT/SVN_REPO/CoopGame/R/AllocationPropertyImputation.R",
    "project_path" : "R/AllocationPropertyImputation.R",
    "properties" : {
        "tempName" : "Untitled8"
    },
    "relative_order" : 59,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}