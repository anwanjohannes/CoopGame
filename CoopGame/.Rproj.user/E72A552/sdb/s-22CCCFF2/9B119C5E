{
    "collab_server" : "",
    "contents" : "#' @name publicGoodIndex\n#' @title publicGoodIndex\n#' @description Calculates the Public Good Index (aka Holler Index) for a specified simple game.\n#' @aliases publicGoodIndex hollerIndex\n#' @export publicGoodIndex\n#' @template author/JA\n#' @template author/JS\n#' @template cites/HOLLER_ET_PACKEL_1983\n#' @templateVar HOLLER_ET_PACKEL_1983_P pp. 21 -- 29\n#' @template cites/HOLLER_1982\n#' @templateVar HOLLER_1982_P pp. 262 -- 271\n#' @inheritParams CoopGameBaseParams\n#' @return The return value is a vector which contains for each player the calculated public good index\n#' @examples\n#' \n#' A=c(0,0,0,1,1,0,1)\n#' publicGoodIndex(A) #result: 0.50 0.25 0.25 \npublicGoodIndex<-function(A){\n  pgi=PublicGoodIndexConcept(A)\n  return(calculatePowerIndex(pgi))\n}\n\nlogicPublicGoodIndex=function(A){\n  retVal = NULL\n  if(!isSimpleGame(A)){\n    print(\"Game is not simple. Therefore no Public Good Index can be retrieved.\")\n  }\n  else \n  {\n    n=getNumberOfPlayers(A)\n    mwcs=getMinimumWinningCoalitions(A)\n   \n    \n    tempVar=sapply(c(1:n),function(i){sum(mwcs[mwcs[,i]==1,\"cVal\"])})\n    sumPlayerValues=sum(tempVar)\n    pgi=sapply(c(1:n),function(i){tempVar[i]/sumPlayerValues})\n    retVal = pgi\n  }\n  return(retVal)\n}\n\n\n#' @title PublicGoodIndexConcept - S4 class for Public Good concept\n#' @noRd\n#' @description PublicGoodIndexConcept\n#' @include PointSolutionConcept.R\n# @exportClass PublicGoodIndexConcept\n\nsetClass(\n  \"PublicGoodIndexConcept\",\n  contains = \"PointSolutionConcept\"\n)\n\n#' @rdname calculatePowerIndex-methods\n#' @aliases calculatePowerIndex,PublicGoodIndexConcept-method\nsetMethod(\n  \"calculatePowerIndex\",\n  signature=\"PublicGoodIndexConcept\",\n  definition=function(.Object){\n    A<-.Object@A\n    return(logicPublicGoodIndex(A))\n  }\n)\n\n#' @title Constructor for PublicGoodIndexConcept\n#' @noRd\n#' @template author/JA\n#' @name PublicGoodIndexConcept\n#' #@export\nPublicGoodIndexConcept<-function(A){\n  retPublicGoodIndex=methods::new(\"PublicGoodIndexConcept\",A)\n  return(retPublicGoodIndex)\n}\n\n\n#' @name drawPublicGoodIndex\n#' @title drawPublicGoodIndex for 3 or 4 players\n#' @description drawPublicGoodIndex draws the Public Good Value for 3 or 4 players.\n#' @aliases drawPublicGoodIndex\n#' @export drawPublicGoodIndex\n#' @template author/JA\n#' @template author/JS\n#' @template cites/HOLLER_ET_PACKEL_1983\n#' @templateVar HOLLER_ET_PACKEL_1983_P pp. 21 -- 29\n#' @inheritParams CoopGameBaseParams\n#' @inheritParams visualize\n#' @examples\n#' A=c(0,0,0,1,1,0,1)\n#' drawPublicGoodIndex(A)\ndrawPublicGoodIndex<-function(A,holdOn=FALSE, colour = NA , label=TRUE, name = \"Public Good Index\"){\n  A=GameVector(A)\n  pgv=publicGoodIndex(A);\n  visualize(A, pointsToDraw=pgv, holdOn=holdOn, colour = colour , label=label, name = name)\n}\n",
    "created" : 1534320648971.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2766447253",
    "id" : "9B119C5E",
    "lastKnownWriteTime" : 1536091312,
    "last_content_update" : 1536091312,
    "path" : "C:/Users/Johannes/Dropbox/UNIVERSITAET/Master_Inf/MASTER_ARBEIT/SVN_REPO/CoopGame/R/PublicGoodIndexConcept.R",
    "project_path" : "R/PublicGoodIndexConcept.R",
    "properties" : {
    },
    "relative_order" : 65,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}