{
    "collab_server" : "",
    "contents" : "#' @name cFuncMajoritySingleVetoValue\n#' @title cFuncMajoritySingleVetoValue\n#' @description \\strong{Coalition value for an majority game with a single veto player:} \\cr\n#' For further information see \\link{cFuncMajoritySingleVeto}\n#' @aliases cFuncMajoritySingleVetoValue\n#' @export cFuncMajoritySingleVetoValue\n#' @template author/MM\n#' @template cites/JACKSON_2008\n#' @templateVar JACKSON_2008_P p. 415\n#' @template param/S\n#' @template param/vetoPlayer\n#' @return \\code{1} if vetoPlayer is included in 'S' and 'S' is not a single coalition, \\code{0} otherwise\n#' @examples\n#' cFuncMajoritySingleVetoValue(S=c(1,2), vetoPlayer=1)\n#' #Output\n#' #[1] 1\ncFuncMajoritySingleVetoValue<-function(S,vetoPlayer){\n  paramCheckResult=getEmptyParamCheckResult()\n  stopOnInvalidCoalitionS(paramCheckResult,S)\n  stopOnInvalidVetoPlayer(paramCheckResult,vetoPlayer)\n  logicCFuncMajoritySingleVetoValue(S,vetoPlayer)\n}\n\nlogicCFuncMajoritySingleVetoValue=function(S, vetoPlayer) {\n  result=0\n  if ( (length(S) >= 2) && (vetoPlayer %in% S) ) {\n    result=1\n  }\n\n  return(result)\n}\n\n\n#' @name cFuncMajoritySingleVetoVector\n#' @title cFuncMajoritySingleVetoVector\n#' @description \\strong{Game vector for an majority game with a single veto player:} \\cr\n#' For further information see \\link{cFuncMajoritySingleVeto}#' @aliases cFuncMajoritySingleVetoVector\n#' @export cFuncMajoritySingleVetoVector\n#' @template author/MM\n#' @template cites/JACKSON_2008\n#' @templateVar JACKSON_2008_P p. 415\n#' @template param/n\n#' @template param/vetoPlayer\n#' @return Game Vector where each elements contains \\code{1} if vetoPlayer is included in 'S' and 'S' is not a single coalition, \\code{0} otherwise\n#' @examples\n#' cFuncMajoritySingleVetoVector(n=3, vetoPlayer=1)\n#' #Output\n#' #An object of class \"GameVector\"\n#' #[1] 0 0 0 1 1 0 1\ncFuncMajoritySingleVetoVector<-function(n,vetoPlayer){\n  msvg=cFuncMajoritySingleVeto(n,vetoPlayer)\n  return(msvg@A)\n}\n\n#' @title cFuncMajoritySingleVeto - class of majority game with single veto player\n#' @description Class for of majority game with single veto player, \n#' inherits methods and slots from class \\linkS4class{CoopGameCFunc}.\n#' @include CoopGameCFunc.R\n#' @exportClass cFuncMajoritySingleVeto\n#' @template slot/vetoPlayer\n\nsetClass(\n  \"cFuncMajoritySingleVeto\",\n  representation(vetoPlayer=\"numeric\"),\n  contains = \"CoopGameCFunc\",\n  validity = function(object){\n    paramCheckResult=getEmptyParamCheckResult()\n    stopOnInvalidVetoPlayer(paramCheckResult,object@vetoPlayer)\n  }\n)\n\nsetMethod(\n  f=\"initialize\",\n  signature = \"cFuncMajoritySingleVeto\",\n  definition=function(.Object,...,vetoPlayer=vetoPlayer){\n    .Object@vetoPlayer<-vetoPlayer\n    .Object<-methods::callNextMethod(.Object, ...)\n    methods::validObject(.Object)\n    return(.Object)\n  }\n)\n\n#' @title Constructor of cFuncMajoritySingleVeto\n#' @description \\strong{Constructor for a specified majority game with a single veto player}\\cr\n#' If coalition 'S' has at least 2 members and if the veto player is part of the\\cr\n#' coalition it generates a value of \\code{1}, otherwise \\code{0}\n#' @template author/JA\n#' @name cFuncMajoritySingleVeto\n#' @template cites/JACKSON_2008\n#' @templateVar JACKSON_2008_P p. 415\n#' @template param/n\n#' @template param/vetoPlayer\n#' @return An S4 object representing the specified majority game with a single veto player\n#' @export\n#' @section Related Functions: \n#' \\link{cFuncMajoritySingleVetoValue}, \\link{cFuncMajoritySingleVetoVector}\n#' @examples \n#' cFuncMajoritySingleVeto(n=3, vetoPlayer=1)\n#' #Output\n#' #An object of class \"cFuncMajoritySingleVeto\"\n#' #Slot \"vetoPlayer\":\n#' #  [1] 1\n#' #\n#' #Slot \"A\":\n#' #  An object of class \"GameVector\"\n#' #[1] 0 0 0 1 1 0 1\n#' #\n#' #Slot \"n\":\n#' #  [1] 3\ncFuncMajoritySingleVeto<-function(n,vetoPlayer){\n  retCFuncMajoritySingleVeto=methods::new(\"cFuncMajoritySingleVeto\",n=n,vetoPlayer=vetoPlayer)\n  return(retCFuncMajoritySingleVeto)\n}\n\n#' @rdname getCoalitionValue-methods\n#' @aliases getCoalitionValue,cFuncMajoritySingleVeto-method\nsetMethod(\n  \"getCoalitionValue\",\n  signature=\"cFuncMajoritySingleVeto\",\n  definition=function(.Object,S,...){\n    return(logicCFuncMajoritySingleVetoValue(S,vetoPlayer=.Object@vetoPlayer))\n  }\n)\n\n\n",
    "created" : 1536399805495.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3496355978",
    "id" : "765AD8B1",
    "lastKnownWriteTime" : 1536401408,
    "last_content_update" : 1536401408345,
    "path" : "C:/Users/Johannes/Dropbox/UNIVERSITAET/Master_Inf/MASTER_ARBEIT/SVN_REPO/CoopGame/R/cFuncMajoritySingleVeto.R",
    "project_path" : "R/cFuncMajoritySingleVeto.R",
    "properties" : {
    },
    "relative_order" : 95,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}