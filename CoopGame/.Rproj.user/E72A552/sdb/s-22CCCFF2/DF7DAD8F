{
    "collab_server" : "",
    "contents" : "#' @name shapleyValue\n#' @title shapley for n players\n#' @description Calculates the Shapley Value for n players with formula from Lloyd Shapley.\n#' @aliases shapleyValue\n#' @export shapleyValue\n#' @template author/AT\n#' @template cites/SHAPLEY_1953\n#' @templateVar SHAPLEY_1953_P pp. 307--317\n#' @template cites/AUMANN_2010\n#' @templateVar AUMANN_2010_P pp. 3--10\n#' @template cites/PETERS_2015\n#' @templateVar PETERS_2015_P p. 156 ff.\n#' @template cites/MASCHLER_ET_SOLAN_ET_ZAMIR_2013\n#' @templateVar MASCHLER_ET_SOLAN_ET_ZAMIR_2013_P p. 748 ff.\n#' @inheritParams CoopGameBaseParams\n#' @return Shapley value for given game vector with n players\n#' @examples\n#' #glove game with l={1}, r={2,3} with 3 players\n#' A=c(0,0,0,1,1,0,1)\n#'\n#' shapleyValue(A) #return (2/3, 1/6, 1/6)\n#' \nshapleyValue<-function(A){\n  sv=ShapleyConcept(A)\n  return(calculatePointSolution(sv))\n}\n\n#' @name shapleyShubikIndex\n#' @title Shapley-Shubik for n players\n#' @description Calculates the Shapley index for a specified simple game with n players.\n#' @aliases shapleyShubikIndex\n#' @export shapleyShubikIndex\n#' @template author/AT\n#' @template author/JS\n#' @template cites/SHAPLEY_SHUBIK_1954\n#' @templateVar SHAPLEY_SHUBIK_1954_P pp. 787--792\n#' @template cites/SHAPLEY_1953\n#' @templateVar SHAPLEY_1953_P pp. 307--317\n#' @template cites/AUMANN_2010\n#' @templateVar AUMANN_2010_P pp. 3--10\n#' @template cites/PETERS_2015\n#' @templateVar PETERS_2015_P p. 156 ff.\n#' @template cites/MASCHLER_ET_SOLAN_ET_ZAMIR_2013\n#' @templateVar MASCHLER_ET_SOLAN_ET_ZAMIR_2013_P p. 748 ff.\n#' @inheritParams CoopGameBaseParams\n#' @return Shapley-Shubik Index for given simple game\n#' @examples\n#' #glove game with l={1}, r={2,3} with 3 players\n#' A=c(0,0,0,1,1,0,1)\n#'\n#' shapleyShubikIndex(A) #return (2/3, 1/6, 1/6)\nshapleyShubikIndex<-function(A){\n  retVal = NULL\n  if(!isSimpleGame(A)){\n    print(\"Game is not simple. Therefore no Shapley Shubik Index can be retrieved\")\n  }\n  else\n  {\n    si=ShapleyConcept(A)\n    retVal=calculatePowerIndex(si)\n  }  \n  return(retVal)\n}\n\nlogicShapleyValue <- function(A) {\n  numberOfPlayers=getNumberOfPlayers(A)\n  \n  shapley<-c()\n  \n  coalitions<-list()\n\n  \n  bitMatrix=createBitMatrix(n = numberOfPlayers, A)\n  bitMatrix<-rbind(bitMatrix, 0)\n  \n  i<-1\n  j<-1\n  #loop over all players\n  while(i<=numberOfPlayers){\n    #get all coalitions the current player is not part of\n    vectorWithIndx<-which(!(bitMatrix[, i]&1))\n    #save in a list for result\n    currCoal<-bitMatrix[vectorWithIndx,]\n    coalitions[[i]]<-currCoal\n    \n    shapleyForPlayer = 0\n    while(j<=nrow(currCoal)){\n      curCoalSet = which(currCoal[j,1:numberOfPlayers]&1)\n      mightiness = sum(currCoal[j,1:numberOfPlayers])\n      #formula:sum(|C|!(n-|C|-1)!/n! *(v(Cv{i})-v(C)))\n      shapleyForPlayer = shapleyForPlayer +\n        ((factorial(mightiness)*(factorial(numberOfPlayers-mightiness-1))/factorial(numberOfPlayers))\n         *(A[indexCoalition(numberOfPlayers,union(i,curCoalSet))]\n           -currCoal[[j, \"cVal\"]]))\n      \n      j<-j+1\n    }\n    \n    j<-1\n    shapley[i] = shapleyForPlayer\n    \n    i<-i+1\n  }\n  \n  # return(list(coalitions = coalitions, shapleyValue=shapley))\n  return(shapley)\n}\n\n#' @title ShapleyConcept - S4 class for shapley concept\n#' @noRd\n#' @include PointSolutionConcept.R\n#'# @exportClass ShapleyConcept\n\nsetClass(\n  \"ShapleyConcept\",\n  contains = \"PointSolutionConcept\"\n)\n\n#' @rdname calculatePointSolution-methods\n#' @aliases calculatePointSolution,ShapleyConcept-method\nsetMethod(\n  \"calculatePointSolution\",\n  signature=\"ShapleyConcept\",\n  definition=function(.Object){\n    A<-.Object@A\n    return(logicShapleyValue(A))\n  }\n)\n\n#' @title Constructor for ShapleyConcept\n#' @noRd\n#' @template author/JA\n#' @name ShapleyConcept\nShapleyConcept<-function(A){\n  retShapleyConcept=methods::new(\"ShapleyConcept\",A)\n  return(retShapleyConcept)\n}\n\n\n\n#' @name drawShapleyValue\n#' @title drawShapleyValue for 3 or 4 players\n#' @description drawShapleyValue draws the Shapley Value for 3 or 4 players.\n#' @aliases drawShapleyValue\n#' @export drawShapleyValue\n#' @template author/AT\n#' @template cites/SHAPLEY_1953\n#' @templateVar SHAPLEY_1953_P pp. 307--317\n#' @template cites/AUMANN_2010\n#' @templateVar AUMANN_2010_P pp. 3--10\n#' @template cites/PETERS_2015\n#' @templateVar PETERS_2015_P p. 156 ff.\n#' @template cites/MASCHLER_ET_SOLAN_ET_ZAMIR_2013\n#' @templateVar MASCHLER_ET_SOLAN_ET_ZAMIR_2013_P p. 748 ff.\n#' @inheritParams CoopGameBaseParams\n#' @inheritParams visualize\n#' @examples\n#' #glove game with l={1}, r={2,3} with 3 players\n#' A=c(0,0,0,1,1,0,1)\n#' drawShapleyValue(A) \ndrawShapleyValue<-function(A,holdOn=FALSE, colour = NA , label=TRUE, name = \"Shapley value\"){\n  A=GameVector(A)\n  shapleyValue=shapleyValue(A);\n  visualize(A, pointsToDraw=shapleyValue, holdOn=holdOn, colour = colour , label=label, name = name)\n}\n\n",
    "created" : 1536695361377.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2188955661",
    "id" : "DF7DAD8F",
    "lastKnownWriteTime" : 1536091313,
    "last_content_update" : 1536091313,
    "path" : "C:/Users/Johannes/Dropbox/UNIVERSITAET/Master_Inf/MASTER_ARBEIT/SVN_REPO/CoopGame/R/ShapleyConcept.R",
    "project_path" : "R/ShapleyConcept.R",
    "properties" : {
        "docOutlineVisible" : "0"
    },
    "relative_order" : 122,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}