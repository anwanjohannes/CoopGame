{
    "collab_server" : "",
    "contents" : "#' @name imputationsetVertices\n#' @title imputationsetVertices\n#' @description Calculates the imputation set for given game vector A.\n#' @aliases imputationsetVertices\n#' @import rcdd\n#' @export imputationsetVertices\n#' @template author/MM \n#' @template author/FM\n#' @inheritParams CoopGameBaseParams\n#' @return imputationmatrix, the rows are the vertices of the imputation set\n#' @examples\n#' library(CoopGame)\n#' A = c(2, 4, 5, 18, 24, 9, 24)\n#' \n#' imputationsetVertices(A)\n#' \n#' #      [,1] [,2] [,3]\n#' #[1,]   15    4    5\n#' #[2,]    2   17    5\n#' #[3,]    2    4   18\nimputationsetVertices<-function(A){\n  ic=ImputationsetConcept(A)\n  payoffSpace=calculateSetSolution(ic)\n  return(payoffSpace@VRepMatrix)\n}\n\n\nlogicImputationsetVertices <- function(A) { \n  #Checks, if the game vector is correct\n  numberOfPlayers = getNumberOfPlayers(A)\n  \n  # Checks if imputation set is not empty\n  if(isEssentialGame(A)== TRUE || isDegenerateGame(A))\n  {\n    #Calculates the matrices and vectors for the function makeH of rcdd\n    matrixA1 = diag(rep(-1,numberOfPlayers))\n    matrixA2 = matrix(rep(-1,numberOfPlayers),nrow = 1)\n    vectorB1 = -A[1:numberOfPlayers]\n    vectorB2 = -A[length(A)]\n    \n    #Utilize the R-Package rcdd\n    hRepresentation = makeH(matrixA1,vectorB1,matrixA2,vectorB2)\n    vRepresentation = scdd(hRepresentation)\n    \n    #Transform the V-Representation into a matrix\n    VectorCounter = length(vRepresentation[[1]]) / (numberOfPlayers + 2)\n    OutcomeVector = vRepresentation[[1]][(VectorCounter * 2 + 1):(length(vRepresentation[[1]]))]\n    OutcomeMatrix = matrix(OutcomeVector, VectorCounter, numberOfPlayers)\n  }\n  else\n  {\n    print(\"The imputation set is empty\")\n    OutcomeMatrix=(matrix(nrow=0,ncol=numberOfPlayers))\n  }\n  return (OutcomeMatrix)\n}\n\n#' @title ImputationsetConcept - Virtual class for point valued solution concepts\n#' @noRd\n#' @include SetSolutionConcept.R\n#' #@exportClass ImputationsetConcept\n\nsetClass(\n  \"ImputationsetConcept\",\n  contains = \"SetSolutionConcept\"\n)\n\n#' @title Constructor for ImputationsetConcept\n#' @noRd\n#' @template author/JA\n#' @name ImputationsetConcept\n#' @include PayoffSpace.R\n#' #@export\nImputationsetConcept<-function(A){\n  retImputationsetConcept=methods::new(\"ImputationsetConcept\",A)\n  return(retImputationsetConcept)\n}\n#' @rdname getSetSolutionVertices-methods\n#' @aliases getSetSolutionVertices,ImputationsetConcept-method\nsetMethod(\n  \"getSetSolutionVertices\",\n  signature=\"ImputationsetConcept\",\n  definition=function(.Object){\n    A<-.Object@A\n    VRep=(logicImputationsetVertices(A))\n    return(VRep)\n  }\n)\n\n\n#' @name belongsToImputationset\n#' @title belongsToImputationset for TU game with n players\n#' @description Checks if the point belongs to the imputation set\n#' @aliases belongsToImputationset\n#' @export belongsToImputationset\n#' @template author/JA\n#' @template param/x\n#' @inheritParams CoopGameBaseParams\n#' @return \\code{TRUE} for a point belonging to the imputation set and \\code{FALSE} otherwise\n#' @examples\n#' library(CoopGame)\n#' A=c(0,1,2,3,4,5,6)\n#'\n#' #Point belongs to imputation set:\n#' belongsToImputationset(x=c(1.5,1,3.5),A)\n#'\n#' #Point does not belong to imputation set:\n#' belongsToImputationset(x=c(2.05,2,2),A)\n\nbelongsToImputationset<-function(x,A){\n  isv=imputationsetVertices(A) \n  ps=PayoffSpace(VRepMatrix=isv)\n  return(isElementOfPayoffSpace(ps,x=x))\n}\n\n\n#' @name drawImputationset\n#' @title drawImputationset for 3 or 4 players\n#' @description drawImputationset draws the imputation set for 3 or 4 players.\n#' @aliases drawImputationset\n#' @export drawImputationset\n#' @template author/JA\n#' @template cites/PELEG_ET_SUDHOELTER_2007\n#' @templateVar PELEG_ET_SUDHOELTER_2007_P p. 133\n#' @inheritParams CoopGameBaseParams\n#' @inheritParams visualize\n#' @examples\n#' library(CoopGame)\n#' A=c(0,1,2,3,4,5,6)\n#' drawImputationset(A)\n\ndrawImputationset<-function(A, label=TRUE){\n  A=GameVector(A)\n  imputationsetDraw(A, label)\n}\n",
    "created" : 1536695056529.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2408889754",
    "id" : "C5872F34",
    "lastKnownWriteTime" : 1537215659,
    "last_content_update" : 1537215659,
    "path" : "C:/Users/Johannes/Dropbox/UNIVERSITAET/Master_Inf/MASTER_ARBEIT/SVN_REPO/CoopGame/R/ImputationsetConcept.R",
    "project_path" : "R/ImputationsetConcept.R",
    "properties" : {
    },
    "relative_order" : 117,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}