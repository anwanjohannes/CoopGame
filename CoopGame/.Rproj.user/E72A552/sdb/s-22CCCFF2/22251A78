{
    "collab_server" : "",
    "contents" : "#' @name perCapitaNucleolus\n#' @title perCapitaNucleolus for n Players\n#' @description Calculates the per capita nucleolus for a game specified by game vector A.\n#' @aliases perCapitaNucleolus\n#' @export perCapitaNucleolus\n#' @template author/JA\n#' @template cites/YOUNG_1985\n#' @templateVar YOUNG_1985_P pp. 65--72\n#' @inheritParams CoopGameBaseParams\n#' @template param/enableTermOutLP\n#' @return value for the per capita nucleolus\n#' @examples\n#' A<-generateGameVector(cFuncCostSharing,n=3,C=c(15,20,55,35,61,65,78))\n#' perCapitaNucleolus(A)\n#' expected_x<-c(4/6,7/6,71/6)\n#' \n#' #Example out of YOUNG 1985, p. 68\n#' A=c(0,0,0,0,9,10,12)\n#' perCapitaNucleolus(A) #[1]  0.6666667  1.1666667 10.1666667\nperCapitaNucleolus <- function(A, enableTermOutLP = FALSE){\n  pcn=PerCapitaNucleolus(A)\n  return(calculateNucleolus(pcn,enableTermOutLP=enableTermOutLP))\n} \n\n\n#' @title Constructor for PerCapitaNucleolus\n#' @noRd\n#' @template author/JA\n#' @name PerCapitaNucleolus\n# @export\nPerCapitaNucleolus<-function(A){\n  retPerCapitaNucleolus=methods::new(\"PerCapitaNucleolus\",A=A)\n  return(retPerCapitaNucleolus)\n}\n\n#' @title PerCapitaNucleolus\n#' @noRd\n#' @template author/JA\n#' @template author/JS\n#' @description An S4 class for the PerCapitaNucleolus\n#' @include NucleolusBase.R\n#' @name PerCapitaNucleolus\n# @exportClass PerCapitaNucleolus\n\nsetClass(\n  \"PerCapitaNucleolus\",\n  contains=\"NucleolusBase\"\n)\n\n#' @rdname determineExcessCoefficients-methods\n#' @aliases determineExcessCoefficients,PerCapitaNucleolus-method\nsetMethod(\n  \"determineExcessCoefficients\",\n  signature=\"PerCapitaNucleolus\",\n  definition=function(.Object){\n    N=length(.Object@A)\n    n=log2(N+1)\n    coeffMat<-createBitMatrix(n)\n    cardS=sapply(1:N,function(ix){sum(coeffMat[ix,1:n])})\n    return(c(cardS[-N],0))\n  }\n)\n\n\n#' @name drawPerCapitaNucleolus\n#' @title drawPerCapitaNucleolus for 3 or 4 players\n#' @description drawPerCapitaNucleolus draws the nucleolus for 3 or 4 players.\n#' @aliases drawPerCapitaNucleolus\n#' @export drawPerCapitaNucleolus\n#' @template author/JA\n#' @template cites/YOUNG_1985\n#' @templateVar YOUNG_1985_P pp. 65--72\n#' @inheritParams CoopGameBaseParams\n#' @inheritParams visualize\n#' @examples\n#' #Example out of YOUNG 1985, p. 68\n#' A=c(0,0,0,0,9,10,12)\n#' drawPerCapitaNucleolus(A)\ndrawPerCapitaNucleolus<-function(A,holdOn=FALSE, colour = NA , label=TRUE, name = \"Per Capita Nucleolus\"){\n  A=GameVector(A)\n  pcn=perCapitaNucleolus(A);\n  visualize(A, pointsToDraw=pcn, holdOn=holdOn, colour = colour , label=label, name = name)\n}",
    "created" : 1534234998601.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1324310146",
    "id" : "22251A78",
    "lastKnownWriteTime" : 1514983613,
    "last_content_update" : 1514983613,
    "path" : "C:/Users/Johannes/Dropbox/UNIVERSITAET/Master_Inf/MASTER_ARBEIT/SVN_REPO/CoopGame/R/PerCapitaNucleolus.R",
    "project_path" : "R/PerCapitaNucleolus.R",
    "properties" : {
    },
    "relative_order" : 39,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}