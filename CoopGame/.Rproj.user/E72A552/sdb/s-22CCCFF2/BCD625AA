{
    "collab_server" : "",
    "contents" : "#' @name getPerCapitaExcessCoefficients\n#' @title getPerCapitaExcessCoefficients\n#' @description getPerCapitaExcessCoefficients\n#' @aliases getPerCapitaExcessCoefficients\n#' @export getPerCapitaExcessCoefficients\n#' @template author/JS\n#' @template cites/PELEG_ET_SUDHOELTER_2007\n#' @templateVar PELEG_ET_SUDHOELTER_2007_P p. 58\n#' @template param/A \n#' @template param/x\n#' @return numeric vector containing the per capita excess coefficients for every coalition\n#' @examples \n#' library(CoopGame)\n#' getPerCapitaExcessCoefficients(c(0,0,0,60,48,30,72), c(24,24,24))\n#' #[1] -24 -24 -24   6   0  -9   0\n#'\n\ngetPerCapitaExcessCoefficients=function(A,x){\n  paramCheckResult=getEmptyParamCheckResult()\n  initialParamCheck_getPerCapitaExcessCoefficients(paramCheckResult, A,x)\n  N=length(A);\n  n<-getNumberOfPlayers(A)\n\n  excessCoefficients=sapply(1:N,function(i){\n    involvedPlayers=getPlayersFromIndex(n,i)\n    return(A[i]-sum(x[involvedPlayers]))\n  })\n  \n  coeffMat<-createBitMatrix(n)\n  cardS=sapply(1:N,function(ix){sum(coeffMat[ix,1:n])})\n  pce = sapply(1:(N-1),function(i){\n    excessCoefficients[i]/cardS[i]\n  })\n  return(c(pce[-N],0))\n}\n\ninitialParamCheck_getPerCapitaExcessCoefficients=function(paramCheckResult,A,x){\n  stopOnInvalidGameVectorA(paramCheckResult, A)\n  stopOnInvalidAllocation(paramCheckResult,x)\n}\n",
    "created" : 1536695807778.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "268904672",
    "id" : "BCD625AA",
    "lastKnownWriteTime" : 1537215659,
    "last_content_update" : 1537215659,
    "path" : "C:/Users/Johannes/Dropbox/UNIVERSITAET/Master_Inf/MASTER_ARBEIT/SVN_REPO/CoopGame/R/getPerCapitaExcessCoefficients.R",
    "project_path" : "R/getPerCapitaExcessCoefficients.R",
    "properties" : {
    },
    "relative_order" : 125,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}