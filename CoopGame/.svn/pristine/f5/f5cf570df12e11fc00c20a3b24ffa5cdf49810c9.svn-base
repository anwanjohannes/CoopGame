#First Section: START
#' @name publicGoodIndex
#' @title publicGoodIndex
#' @description Calculates the public good index for specified game.
#' @export publicGoodIndex
#' @template author/JA
#' @template cites/HOLLER_ET_PACKEL_1983
#' @templateVar HOLLER_ET_PACKEL_1983_P pp. 21 -- 29
#' @inheritParams CoopGameBaseParams
#' @return The return value is a vector which contains for each player the calculated public good index
#' @examples
#' 
#' A=c(0,0,0,1,1,0,1)
#' publicGoodIndex(A) #result: 0.50 0.25 0.25 
publicGoodIndex<-function(A){
  pgi=PublicGoodConcept(A)
  return(calculatePowerIndex(pgi))
}

#  Version 1.0
#  Date: 20151228
#' @name publicGoodValue
#' @title publicGoodValue
#' @description solution concept using publicGoodValue
#' @aliases publicGoodValue
#' @export publicGoodValue
#' @template author/JA
#' @template cites/HOLLER_ET_PACKEL_1983
#' @templateVar HOLLER_ET_PACKEL_1983_P pp. 21 -- 29
#' @inheritParams CoopGameBaseParams
#' @return The return value is a vector which contains for each player the calculated public good value
#' @examples
#' A=c(0,0,0,1,1,0,1)
#' publicGoodIndex(A) #result: 0.50 0.25 0.25 
publicGoodValue<-function(A){
  pgv=PublicGoodConcept(A)
  return(calculatePointSolution(pgv))
}





logicPublicGoodIndex=function(A){
  n=log2(length(A)+1)
  bm=createBitMatrix(n,A)
  mwcs=getMinimumWinningCoalitions(bm)
 
  
  temp=sapply(c(1:n),function(i){sum(mwcs[mwcs[,i]==1,"cVal"])})
  sumPlayerValues=sum(temp)
  pgi=sapply(c(1:n),function(i){temp[i]/sumPlayerValues})

  return(PGI=pgi)
}


#' @title PublicGoodConcept - Virtual class for point valued solution concepts
#' @noRd
#' @include PointSolutionConcept.R
#' #@exportClass PublicGoodConcept

setClass(
  "PublicGoodConcept",
  contains = "PointSolutionConcept"
)

#' @rdname calculatePowerIndex-methods
#' @aliases calculatePowerIndex,PublicGoodConcept-method
setMethod(
  "calculatePowerIndex",
  signature="PublicGoodConcept",
  definition=function(.Object){
    A<-.Object@A
    return(logicPublicGoodIndex(A))
  }
)

#' @title Constructor for PublicGoodConcept
#' @noRd
#' @template author/JA
#' @name PublicGoodConcept
#' #@export
PublicGoodConcept<-function(A){
  retPublicGoodIndex=methods::new("PublicGoodConcept",A)
  return(retPublicGoodIndex)
}


#' @name drawPublicGoodValue
#' @title drawPublicGoodValue for n players
#' @description drawPublicGoodValue draws the modiclus for n players.
#' @aliases drawPublicGoodValue
#' @export drawPublicGoodValue
#' @template author/JA
#' @template cites/HOLLER_ET_PACKEL_1983
#' @templateVar HOLLER_ET_PACKEL_1983_P pp. 21 -- 29
#' @inheritParams CoopGameBaseParams
#' @inheritParams visualize
#' @examples
#' A=c(0,0,0,1,1,0,1)
#' drawPublicGoodValue(A)
drawPublicGoodValue<-function(A,holdOn=FALSE, colour = NA , label=TRUE, name = "Banzhaf value"){
  A=GameVector(A)
  pgv=publicGoodValue(A);
  visualize(A, pointsToDraw=pgv, holdOn=holdOn, colour = colour , label=label, name = name)
}
