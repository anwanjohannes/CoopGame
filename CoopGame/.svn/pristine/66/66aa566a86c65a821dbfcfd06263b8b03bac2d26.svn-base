boolSkip=F

test_that("Check 40.1 - getNumberOfPlayers - 3 players",{
  if(boolSkip){
    skip("Test was skipped")
  }
  A <- c(0,0,0,60,60,60,72)
  result = getNumberOfPlayers(A)
  expect_equal(result, 3)
})

test_that("Check 40.2 - getNumberOfPlayers - 4 players",{
  if(boolSkip){
    skip("Test was skipped")
  }
  A <- generateGameVector(func = cFuncMaschler, n = 4)
  result = getNumberOfPlayers(A)
  expect_equal(result, 4)
})

test_that("Check 40.3 - getNumberOfPlayers - 5 players",{
  if(boolSkip){
    skip("Test was skipped")
  }
  A <- generateGameVector(func = cFuncMaschler, n = 5)
  result = getNumberOfPlayers(A)
  expect_equal(result, 5)
})

test_that("Check 40.4 - getNumberOfPlayers - 10 players",{
  if(boolSkip){
    skip("Test was skipped")
  }
  A <- generateGameVector(func = cFuncMaschler, n = 10)
  result = getNumberOfPlayers(A)
  expect_equal(result, 10)
})

test_that("Check 40.5 - getNumberOfPlayers - invalid number of players - error: invalid numberOfPlayers", {
  if(boolSkip){
    skip("Test was skipped")
  }
  A <- c(0,0,0,60,60,60,72,72)
  expect_error(getNumberOfPlayers(A), "Error Code 1001: Number of elements in A is invalid")
})

test_that("Check 40.6 - getNumberOfPlayers - invalid number of players - error: invalid numberOfPlayers - NULL", {
  if(boolSkip){
    skip("Test was skipped")
  }
  A <- c()
  expect_error(getNumberOfPlayers(A), "Error Code 1000: Game vector A is invalid as 'NULL'")
})