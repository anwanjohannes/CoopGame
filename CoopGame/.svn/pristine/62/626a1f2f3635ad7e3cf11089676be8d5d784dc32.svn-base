#' @name isDegenerateGame
#' @title isDegenerateGame
#' @description Checks if a game for N Player is essential.
#' A game is said to be essential, if the players in the grand coalition generate more  
#' the same value as the sum of the values of the singleton coalitions
#' A game is degenerate, if \deqn{v(N) = \sum v({i})}
#' @aliases isDegenerateGame
#' @export isDegenerateGame
#' @template author/MM
#' @template author/JS
#' @inheritParams CoopGameBaseParams
#' @return \code{TRUE} if the game is degenerate, else \code{FALSE}
#' @examples
#'
#' A <- c(0,0,0,60,60,60,72)
#'
#' isDegenerateGame(A) #FALSE
#'
#' B <- c(30,30,15,60,60,60,72)
#'
#' isDegenerateGame(B) #FALSE
#'
#' C <- c(20,20,32,60,60,60,72)
#'
#' isDegenerateGame(C) # TRUE
isDegenerateGame<-function(A){
  isE=GamePropertyDegeneration(A)
  return(determineProperty(isE))
}

logicIsDegeneratedGame <- function(A) {
  #get number of players
  numberOfPlayers <- getNumberOfPlayers(A)

  isDegenerate <- FALSE

  # sum up values for singleton coalitions and get value generated by the grand coalition
  scVal <- sum(A[1:numberOfPlayers])

  gcVal <- A[length(A)]

  if(gcVal == scVal) {
    isDegenerate <- TRUE
  } 
  return(isDegenerate)

  # old
  #return(isEssential)
}

#' @title GamePropertyDegeneration
#' @noRd
#' @description GamePropertyDegeneration
#' @include GameProperty.R
#' #@exportClass GamePropertyDegeneration

setClass(
  "GamePropertyDegeneration",
  contains = "GameProperty"
)

#' @title Constructor for GamePropertyDegeneration
#' @noRd
#' @template author/JA
#' @name GamePropertyDegeneration
#' #@export
GamePropertyDegeneration<-function(A){
  retGamePropertyDegeneration=methods::new("GamePropertyDegeneration",A)
  return(retGamePropertyDegeneration)
}

#' @rdname determineProperty-methods
#' @aliases determineProperty,GamePropertyDegeneration-method
setMethod(
  "determineProperty",
  signature="GamePropertyDegeneration",
  definition=function(.Object){
    A<-.Object@A
    result=logicIsDegeneratedGame(A)
    return(result)
  }
)



