AllocationPropertyImputation.R:    print("Constraint for Pareto efficiency is hurt")
AllocationPropertyImputation.R:    print("Constraint for individual rationality is hurt")
BanzhafConcept.R:    print("Game is not simple. Therefore no raw Banzhaf Index can be retrieved")
BanzhafConcept.R:    print("Game is not simple. Therefore no Normalized Banzhaf Index can be retrieved")
BanzhafConcept.R:    print("Game is not simple. Therefore no Non-normalized Banzhaf Index can be retrieved")
BaruaChakravartySarkarConcept.R:    print("Game is not simple. Therefore no Barua Chakravarty Sarkar Index can be retrieved")
CentroidCoreConcept.R:    print("Game is not balanced therefore no centroid of the core can be retrieved")
CentroidCoreCoverConcept.R:    print("Game is not quasi balanced therefore no centroid of the core cover can be retrieved")
CentroidImputationSetConcept.R:    print("Game is not essential therefore no centroid of the imputation set can be retrieved")
CentroidReasonableSetConcept.R:    print("Reasonable set is empty and so no centroid of the reasonable set can be retrieved")
CentroidWeberSetConcept.R:    print("Weber set is empty and so no centroid of the Weber set can be retrieved")
ColemanInitiativeConcept.R:    print("Game is not simple. Therefore no Coleman Initiative Power Index can be retrieved")
ColemanPreventiveConcept.R:    print("Game is not simple. Therefore no Coleman Preventive Power Index can be retrieved")
CoreConcept.R:      print("The imputation set is empty")
CoreCoverConcept.R:      print("The core cover is empty")
DisruptionNucleolus.R:    print("Strict core is empty for specified game therefore no unique solution can be retrieved.")
GamePropertyWeakSuperadditivity.R:        print(paste("Game property 'weakly additive' is violated for instance for coalition S with index",rownames(v_S)[!v_Splusi<=v_Sui],"and player i as",i))
GameVector.R:      print("Zero-one-normalized game can not be retrieved since value of grand coalition of zero-normalized game is 0.")
GatelyConcept.R:    print("Gately Value does not exist as imputation set is empty.")
GatelyConcept.R:    print("Gately Value does not exist as A shows is no strict imputation set.")
GatelyConcept.R:        print(msg)
GatelyConcept.R:        print("No solution existing")
GatelyConcept.R:        print("Calculated value is no imputation hence no Gately Value exists.")
getMinimumWinningCoalitions.R:    print("Game is not simple therefore no minimum winning coalitions can be retrieved.")
ImputationsetConcept.R:    print("The imputation set is empty")
imputationsetDraw.R:        print("The imputation set has too few points")
imputationsetDraw.R:      print("The imputation set is empty")
imputationsetDraw.R:    print("Invalid number of Players")
JohnstonConcept.R:    print("Game is not simple. Therefore no Johnston Index can be retrieved")
KoenigBraeuningerConcept.R:    print("Game is not simple. Therefore no Koenig Braeuninger Index can be retrieved")
LexicalGatelyValue.R:    print("Game is not quasi-balanced therefore uniqueness can not be ensured. ")
NevisonConcept.R:    print("Game is not simple. Therefore no Nevison Index can be retrieved")
ParameterChecks_CoopGame.R:  print("stopOnInvalidParameterDummy_CoopGame is a dummy function for a simple parameter check. In case of Parameter anyParameterChecked it checks if it is both in the range between 0 and 1000 as well as numeric.");
PayoffSpace.R:    print("Payoff space is empty.")
PublicGoodIndexConcept.R:    print("Game is not simple. Therefore no Public Good Index can be retrieved")
PublicHelpChiIndexConcept.R:    print("Game is not simple. Therefore no Public Help Chi Index can be retrieved")
PublicHelpIndexConcept.R:    print("Game is not simple. Therefore no Public Help Index can be retrieved")
PublicHelpValueChiConcept.R:    print("Game is not nonnegative. Therefore we do not compute any (normalized) public help chi value.")
PublicHelpValueChiConcept.R:    print("Game is not nonnegative. Therefore we do not compute any public help chi value.")
PublicHelpValueChiConcept.R:    print("Game is not nonnegative. Therefore we do not compute any Public Help Value.")
PublicHelpValueConcept.R:    print("Game is not nonnegative. Therefore we do not compute any (normalized) public help value.")
PublicHelpValueConcept.R:    print("Game is not nonnegative. Therefore we do not compute any public help value.")
PublicHelpValueConcept.R:    print("Game is not nonnegative. Therefore we do not compute any Public Help Value.")
RaeConcept.R:    print("Game is not simple. Therefore no Public Help Chi Index can be retrieved")
ReasonableSetConcept.R:      print("The reasonable set is empty")
ShapleyConcept.R:    print("Game is not simple. Therefore no Shapley Shubik Index can be retrieved")
TauConcept.R:    print("Game is not quasi balanced therefore no tau value can be retrieved")
Visualizer.R:      print("Invalid points to draw.")
Visualizer.R:    print("The solution you would like to draw does not exist.")
Visualizer.R:          print("There are too few points for a 2D-draw!")
Visualizer.R:          print("There are too few points for a 3D-draw!")
Visualizer.R:        print("The program can only draw if there are 3 or 4 players - that means 3 or 4 columns")
Visualizer.R:      print("There are no points to draw!")
Visualizer.R:      print("The imputation set as frame of the drawing has too few points")
Visualizer.R:    print("The game vector does not fit with the number of players of the points of the convex hull!")
