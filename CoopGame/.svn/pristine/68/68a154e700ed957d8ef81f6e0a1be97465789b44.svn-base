#' @title Constructor for LPMatrix
#' @template author/JA
#' @name LPMatrix
#' @export
LPMatrix<-function(matrix){methods::new("LPMatrix",matrix=matrix)}

#' @title LPMatrix - Managing numeric values of the lp constraint coefficients
#' @description An S4 class representing an utility for managing numeric values of the constraint coefficients of a linear programme
#' as often used in the Game Theory package CoopGame and its derived packages.
#' @import glpkAPI
#' @slot matrix containing the numeric values of the constraint coefficients
#' @exportClass LPMatrix

#Class LPMatrix definition
setClass(
  "LPMatrix",
  representation(matrix="matrix")
  # validity = function(object){
  #   nRows=nrow(object@matrix)
  #   nCols=ncol(object@matrix)
  # 
  #   #number of rows is wrong according to the number of players
  #   if((2^(nCols-1)-1)!=nRows){
  #     return(FALSE)
  #   }
  #   
  # }
  
)


setGeneric("getMatrix",function(.Object){standardGeneric("getMatrix")})
setMethod(
  "getMatrix",
  signature = "LPMatrix",
  definition = function(.Object){
    return(.Object@matrix)
  }
)



setGeneric("setMatrix<-",function(.Object,value){standardGeneric("setMatrix<-")})

setReplaceMethod(
  f="setMatrix",
  signature="LPMatrix",
  definition=function(.Object,value){
    .Object@matrix<-value
    return(.Object)
  }
)



setGeneric("setMatrixLastCol<-",function(.Object,value){standardGeneric("setMatrixLastCol<-")})

setReplaceMethod(
  f="setMatrixLastCol",
  signature="LPMatrix",
  definition=function(.Object,value){
    .Object@matrix[,"cVal"]<-value
    return(.Object)
  }
)


#Class LPMatrix getter last column of matrix
setGeneric("getMatrixLastCol",function(.Object){standardGeneric("getMatrixLastCol")})
setMethod(
  "getMatrixLastCol",
  signature = "LPMatrix",
  definition = function(.Object){
    return(.Object@matrix[,"cVal"])
  }
)
