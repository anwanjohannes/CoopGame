---
title: "Initialization of the Linear Programme"
author: "Johannes Anwander"
date: "28 Januar 2018"
output: pdf_document
---

##### Initialization of the Linear Programme
For the initialization of the coefficient matrix to the linear program, the initLPMatrix method is specified.
For a number of n players, a matrix is created with (2 ^ n-1) row and (n + 1) column entries.
The number of lines is given by the number of possible coalitions corresponding to the power of the power set for the number of players of n with card (Pot ({1, ..., n})) = 2 ^ n, excluding the zero coalition with an empty amount of players and so the value of 2 ^ n-1 opens up.
The first n columns contain the characteristic vector for each player, which indicates whether the player in question is involved in the respective coalition.
The column for the structure variable to be minimized from the objective function - with the index (n + 1) - is assigned the values determined by the call to the method determineExcessCoefficients.

In the case of the nucleolus, the determineExcessCoefficients method assigns only the structure variable of the Excess with '1' as the coefficient for all entries except the large coalition with '0'.

In the initLPRows method, the values of the game vector are set as the lower bound. By contrast, the restrictions remain unrestricted upwards, except for the entry of the grand coalition. For this, the corresponding coalition value is also set here as the upper limit. For the border types, all restrictions with 'GLP\_LO' are specified to be restricted down to the restriction for the grand coalition. In the large coalition restriction, 'GLP_FX' sets an equality constraint on the border type.

The method initLPBndsObjCoefs is defined for the nucleolus so that for the lower bounds of the decision variables the values of the one-coalitions v ({i}) are defined. For the upper bound, it is determined that these are also unlimited in the positive. An exception is the decision variable to be minimized for the surplus; it is a free variable that is completely unlimited.
In the objective function, only the decision variable for the excess should be minimized.

