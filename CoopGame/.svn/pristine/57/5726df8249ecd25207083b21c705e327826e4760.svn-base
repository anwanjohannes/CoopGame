---
title: "The Class PointSolutionConcept"
author: "Johannes Anwander"
date: "28 Januar 2018"
output: pdf_document
---


### The Class PointSolutionConcept
From the class PointSolutionConcept all point valued solution as well as all power index concepts in CoopGame are derived. As SetSolutionConcept it contains the wrapper method calculateSolution and the method calculatePointSolution.
Because all point valued concepts can be also applied as power index concepts and vice versa, additionaly calculatePowerIndex is defined.
The implementation of calculatePowerIndex within the class PointSolutionConcept calls calculatePointSolution to determine the power index as the ratio of each player's share towards the gain of the grand coalition.
```{r, eval=FALSE}
setMethod(
  "calculatePowerIndex",
  signature="PointSolutionConcept",
  definition=function(.Object){
    pointSolution=calculatePointSolution(.Object)
    sum=sum(pointSolution)
    return(pointSolution/sum)
  }
)
```
Whereas the implementation of calculatePointSolution uses calculatePowerIndex by distributing the gain of the grand coalitions according the share derived from their personal power index.
```{r, eval=FALSE}
setMethod(
  "calculatePointSolution",
  signature="PointSolutionConcept",
  definition=function(.Object){
    A<-.Object@A
    N<-length(A)
    powerIndex<-calculatePowerIndex(.Object)
    return((powerIndex*A[N])/sum(powerIndex))
  }
)
```
In case the concept to implemented belongs to the group of power indices it is sufficient to reimplement the calculatePowerIndex, when it is a point solution concept to reimplement calculatePointSolution. By doing like this at the same time for both point solution and power index concepts methods for identifying the point solution as well as determining the power index are realized.  
For the simple user again wrapper functions are provided, which are named by following patterns:
For visualization of point solution the function draw<conceptname>Value, retrieving the power index <conceptname>Index and getting the point value <conceptname>Value.